{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"expo-av","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":32,"index":74}}],"key":"VxVG0TWBdB+Oc1qOQ32HKtN+H5M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useAudioPlayer\", {\n    enumerable: true,\n    get: function () {\n      return useAudioPlayer;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _expoAv = require(_dependencyMap[1], \"expo-av\");\n  const useAudioPlayer = () => {\n    const [isPlaying, setIsPlaying] = (0, _react.useState)(false);\n    const [isLoading, setIsLoading] = (0, _react.useState)(false);\n    const soundRef = (0, _react.useRef)(null);\n    const cacheRef = (0, _react.useRef)({});\n    const playAudio = async (messageId, text, lang, backendUrl) => {\n      try {\n        // Check cache first\n        if (cacheRef.current[messageId]) {\n          console.log('🔊 Playing from cache:', messageId);\n          await playFromUri(cacheRef.current[messageId]);\n          return;\n        }\n        setIsLoading(true);\n        console.log('🔊 Fetching audio from TTS...', {\n          messageId,\n          text: text.substring(0, 50)\n        });\n\n        // Request TTS from backend (now using OpenAI)\n        const response = await fetch(`${backendUrl}/api/tts`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text,\n            lang,\n            provider: 'openai'\n          })\n        });\n        console.log('📥 TTS Response status:', response.status);\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error('❌ TTS Error:', errorText);\n          throw new Error(`TTS failed: ${response.status} - ${errorText}`);\n        }\n\n        // For web/mobile - use data URI directly\n        const blob = await response.blob();\n        console.log('📦 Blob received:', blob.size, 'bytes');\n        const reader = new FileReader();\n        reader.onloadend = async () => {\n          try {\n            const dataUri = reader.result;\n\n            // Cache the data URI\n            cacheRef.current[messageId] = dataUri;\n            console.log('✅ Audio cached as data URI, playing now...');\n            await playFromUri(dataUri);\n          } catch (playError) {\n            console.error('❌ Play error:', playError);\n            setIsLoading(false);\n          }\n        };\n        reader.onerror = () => {\n          console.error('❌ FileReader error');\n          setIsLoading(false);\n        };\n        reader.readAsDataURL(blob);\n      } catch (error) {\n        console.error('❌ Audio playback error:', error);\n        setIsLoading(false);\n      }\n    };\n    const playFromUri = async uri => {\n      try {\n        console.log('🔊 playFromUri called with uri length:', uri.length);\n\n        // Stop and cleanup any currently playing sound\n        if (soundRef.current) {\n          console.log('🛑 Stopping previous sound...');\n          try {\n            await soundRef.current.stopAsync();\n            await soundRef.current.unloadAsync();\n          } catch (e) {\n            console.log('⚠️ Error stopping previous sound:', e);\n          }\n          soundRef.current = null;\n        }\n\n        // Set audio mode\n        await _expoAv.Audio.setAudioModeAsync({\n          allowsRecordingIOS: false,\n          playsInSilentModeIOS: true,\n          shouldDuckAndroid: true,\n          playThroughEarpieceAndroid: false,\n          staysActiveInBackground: false\n        });\n        console.log('🔊 Creating new sound from data URI...');\n\n        // Create sound without autoplay first\n        const {\n          sound\n        } = await _expoAv.Audio.Sound.createAsync({\n          uri\n        }, {\n          shouldPlay: false\n        },\n        // Don't autoplay yet\n        onPlaybackStatusUpdate);\n        soundRef.current = sound;\n        console.log('✅ Sound created successfully');\n\n        // Check if sound is loaded\n        const status = await sound.getStatusAsync();\n        console.log('📊 Sound status:', status);\n        if (status.isLoaded) {\n          console.log('▶️ Playing sound now...');\n          await sound.playAsync();\n          setIsPlaying(true);\n          console.log('✅ Sound playing!');\n        } else {\n          throw new Error('Sound failed to load');\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error('❌ Failed to play audio:', error);\n        if (error instanceof Error) {\n          console.error('❌ Error details:', error.message, error.stack);\n        }\n        setIsLoading(false);\n        setIsPlaying(false);\n      }\n    };\n    const onPlaybackStatusUpdate = status => {\n      if (status.didJustFinish) {\n        console.log('✅ Audio finished playing');\n        setIsPlaying(false);\n        if (soundRef.current) {\n          soundRef.current.unloadAsync();\n        }\n      }\n    };\n    const stopAudio = async () => {\n      if (soundRef.current) {\n        await soundRef.current.stopAsync();\n        await soundRef.current.unloadAsync();\n        soundRef.current = null;\n      }\n      setIsPlaying(false);\n    };\n    return {\n      isPlaying,\n      isLoading,\n      playAudio,\n      stopAudio\n    };\n  };\n});","lineCount":164,"map":[[7,2,9,0,"Object"],[7,8,9,0],[7,9,9,0,"defineProperty"],[7,23,9,0],[7,24,9,0,"exports"],[7,31,9,0],[8,4,9,0,"enumerable"],[8,14,9,0],[9,4,9,0,"get"],[9,7,9,0],[9,18,9,0,"get"],[9,19,9,0],[10,6,9,0],[10,13,9,0,"useAudioPlayer"],[10,27,9,0],[11,4,9,0],[12,2,9,0],[13,2,1,0],[13,6,1,0,"_react"],[13,12,1,0],[13,15,1,0,"require"],[13,22,1,0],[13,23,1,0,"_dependencyMap"],[13,37,1,0],[14,2,2,0],[14,6,2,0,"_expoAv"],[14,13,2,0],[14,16,2,0,"require"],[14,23,2,0],[14,24,2,0,"_dependencyMap"],[14,38,2,0],[15,2,9,7],[15,8,9,13,"useAudioPlayer"],[15,22,9,27],[15,25,9,30,"useAudioPlayer"],[15,26,9,30],[15,31,9,36],[16,4,10,2],[16,10,10,8],[16,11,10,9,"isPlaying"],[16,20,10,18],[16,22,10,20,"setIsPlaying"],[16,34,10,32],[16,35,10,33],[16,38,10,36],[16,42,10,36,"useState"],[16,48,10,44],[16,49,10,44,"useState"],[16,57,10,44],[16,59,10,45],[16,64,10,50],[16,65,10,51],[17,4,11,2],[17,10,11,8],[17,11,11,9,"isLoading"],[17,20,11,18],[17,22,11,20,"setIsLoading"],[17,34,11,32],[17,35,11,33],[17,38,11,36],[17,42,11,36,"useState"],[17,48,11,44],[17,49,11,44,"useState"],[17,57,11,44],[17,59,11,45],[17,64,11,50],[17,65,11,51],[18,4,12,2],[18,10,12,8,"soundRef"],[18,18,12,16],[18,21,12,19],[18,25,12,19,"useRef"],[18,31,12,25],[18,32,12,25,"useRef"],[18,38,12,25],[18,40,12,46],[18,44,12,50],[18,45,12,51],[19,4,13,2],[19,10,13,8,"cacheRef"],[19,18,13,16],[19,21,13,19],[19,25,13,19,"useRef"],[19,31,13,25],[19,32,13,25,"useRef"],[19,38,13,25],[19,40,13,38],[19,41,13,39],[19,42,13,40],[19,43,13,41],[20,4,15,2],[20,10,15,8,"playAudio"],[20,19,15,17],[20,22,15,20],[20,28,15,20,"playAudio"],[20,29,15,27,"messageId"],[20,38,15,44],[20,40,15,46,"text"],[20,44,15,58],[20,46,15,60,"lang"],[20,50,15,72],[20,52,15,74,"backendUrl"],[20,62,15,92],[20,67,15,97],[21,6,16,4],[21,10,16,8],[22,8,17,6],[23,8,18,6],[23,12,18,10,"cacheRef"],[23,20,18,18],[23,21,18,19,"current"],[23,28,18,26],[23,29,18,27,"messageId"],[23,38,18,36],[23,39,18,37],[23,41,18,39],[24,10,19,8,"console"],[24,17,19,15],[24,18,19,16,"log"],[24,21,19,19],[24,22,19,20],[24,46,19,44],[24,48,19,46,"messageId"],[24,57,19,55],[24,58,19,56],[25,10,20,8],[25,16,20,14,"playFromUri"],[25,27,20,25],[25,28,20,26,"cacheRef"],[25,36,20,34],[25,37,20,35,"current"],[25,44,20,42],[25,45,20,43,"messageId"],[25,54,20,52],[25,55,20,53],[25,56,20,54],[26,10,21,8],[27,8,22,6],[28,8,24,6,"setIsLoading"],[28,20,24,18],[28,21,24,19],[28,25,24,23],[28,26,24,24],[29,8,25,6,"console"],[29,15,25,13],[29,16,25,14,"log"],[29,19,25,17],[29,20,25,18],[29,51,25,49],[29,53,25,51],[30,10,25,53,"messageId"],[30,19,25,62],[31,10,25,64,"text"],[31,14,25,68],[31,16,25,70,"text"],[31,20,25,74],[31,21,25,75,"substring"],[31,30,25,84],[31,31,25,85],[31,32,25,86],[31,34,25,88],[31,36,25,90],[32,8,25,92],[32,9,25,93],[32,10,25,94],[34,8,27,6],[35,8,28,6],[35,14,28,12,"response"],[35,22,28,20],[35,25,28,23],[35,31,28,29,"fetch"],[35,36,28,34],[35,37,28,35],[35,40,28,38,"backendUrl"],[35,50,28,48],[35,60,28,58],[35,62,28,60],[36,10,29,8,"method"],[36,16,29,14],[36,18,29,16],[36,24,29,22],[37,10,30,8,"headers"],[37,17,30,15],[37,19,30,17],[38,12,31,10],[38,26,31,24],[38,28,31,26],[39,10,32,8],[39,11,32,9],[40,10,33,8,"body"],[40,14,33,12],[40,16,33,14,"JSON"],[40,20,33,18],[40,21,33,19,"stringify"],[40,30,33,28],[40,31,33,29],[41,12,33,31,"text"],[41,16,33,35],[42,12,33,37,"lang"],[42,16,33,41],[43,12,33,43,"provider"],[43,20,33,51],[43,22,33,53],[44,10,33,62],[44,11,33,63],[45,8,34,6],[45,9,34,7],[45,10,34,8],[46,8,36,6,"console"],[46,15,36,13],[46,16,36,14,"log"],[46,19,36,17],[46,20,36,18],[46,45,36,43],[46,47,36,45,"response"],[46,55,36,53],[46,56,36,54,"status"],[46,62,36,60],[46,63,36,61],[47,8,38,6],[47,12,38,10],[47,13,38,11,"response"],[47,21,38,19],[47,22,38,20,"ok"],[47,24,38,22],[47,26,38,24],[48,10,39,8],[48,16,39,14,"errorText"],[48,25,39,23],[48,28,39,26],[48,34,39,32,"response"],[48,42,39,40],[48,43,39,41,"text"],[48,47,39,45],[48,48,39,46],[48,49,39,47],[49,10,40,8,"console"],[49,17,40,15],[49,18,40,16,"error"],[49,23,40,21],[49,24,40,22],[49,38,40,36],[49,40,40,38,"errorText"],[49,49,40,47],[49,50,40,48],[50,10,41,8],[50,16,41,14],[50,20,41,18,"Error"],[50,25,41,23],[50,26,41,24],[50,41,41,39,"response"],[50,49,41,47],[50,50,41,48,"status"],[50,56,41,54],[50,62,41,60,"errorText"],[50,71,41,69],[50,73,41,71],[50,74,41,72],[51,8,42,6],[53,8,44,6],[54,8,45,6],[54,14,45,12,"blob"],[54,18,45,16],[54,21,45,19],[54,27,45,25,"response"],[54,35,45,33],[54,36,45,34,"blob"],[54,40,45,38],[54,41,45,39],[54,42,45,40],[55,8,46,6,"console"],[55,15,46,13],[55,16,46,14,"log"],[55,19,46,17],[55,20,46,18],[55,39,46,37],[55,41,46,39,"blob"],[55,45,46,43],[55,46,46,44,"size"],[55,50,46,48],[55,52,46,50],[55,59,46,57],[55,60,46,58],[56,8,48,6],[56,14,48,12,"reader"],[56,20,48,18],[56,23,48,21],[56,27,48,25,"FileReader"],[56,37,48,35],[56,38,48,36],[56,39,48,37],[57,8,50,6,"reader"],[57,14,50,12],[57,15,50,13,"onloadend"],[57,24,50,22],[57,27,50,25],[57,39,50,37],[58,10,51,8],[58,14,51,12],[59,12,52,10],[59,18,52,16,"dataUri"],[59,25,52,23],[59,28,52,26,"reader"],[59,34,52,32],[59,35,52,33,"result"],[59,41,52,49],[61,12,54,10],[62,12,55,10,"cacheRef"],[62,20,55,18],[62,21,55,19,"current"],[62,28,55,26],[62,29,55,27,"messageId"],[62,38,55,36],[62,39,55,37],[62,42,55,40,"dataUri"],[62,49,55,47],[63,12,57,10,"console"],[63,19,57,17],[63,20,57,18,"log"],[63,23,57,21],[63,24,57,22],[63,68,57,66],[63,69,57,67],[64,12,58,10],[64,18,58,16,"playFromUri"],[64,29,58,27],[64,30,58,28,"dataUri"],[64,37,58,35],[64,38,58,36],[65,10,59,8],[65,11,59,9],[65,12,59,10],[65,19,59,17,"playError"],[65,28,59,26],[65,30,59,28],[66,12,60,10,"console"],[66,19,60,17],[66,20,60,18,"error"],[66,25,60,23],[66,26,60,24],[66,41,60,39],[66,43,60,41,"playError"],[66,52,60,50],[66,53,60,51],[67,12,61,10,"setIsLoading"],[67,24,61,22],[67,25,61,23],[67,30,61,28],[67,31,61,29],[68,10,62,8],[69,8,63,6],[69,9,63,7],[70,8,65,6,"reader"],[70,14,65,12],[70,15,65,13,"onerror"],[70,22,65,20],[70,25,65,23],[70,31,65,29],[71,10,66,8,"console"],[71,17,66,15],[71,18,66,16,"error"],[71,23,66,21],[71,24,66,22],[71,44,66,42],[71,45,66,43],[72,10,67,8,"setIsLoading"],[72,22,67,20],[72,23,67,21],[72,28,67,26],[72,29,67,27],[73,8,68,6],[73,9,68,7],[74,8,70,6,"reader"],[74,14,70,12],[74,15,70,13,"readAsDataURL"],[74,28,70,26],[74,29,70,27,"blob"],[74,33,70,31],[74,34,70,32],[75,6,71,4],[75,7,71,5],[75,8,71,6],[75,15,71,13,"error"],[75,20,71,18],[75,22,71,20],[76,8,72,6,"console"],[76,15,72,13],[76,16,72,14,"error"],[76,21,72,19],[76,22,72,20],[76,47,72,45],[76,49,72,47,"error"],[76,54,72,52],[76,55,72,53],[77,8,73,6,"setIsLoading"],[77,20,73,18],[77,21,73,19],[77,26,73,24],[77,27,73,25],[78,6,74,4],[79,4,75,2],[79,5,75,3],[80,4,77,2],[80,10,77,8,"playFromUri"],[80,21,77,19],[80,24,77,22],[80,30,77,29,"uri"],[80,33,77,40],[80,37,77,45],[81,6,78,4],[81,10,78,8],[82,8,79,6,"console"],[82,15,79,13],[82,16,79,14,"log"],[82,19,79,17],[82,20,79,18],[82,60,79,58],[82,62,79,60,"uri"],[82,65,79,63],[82,66,79,64,"length"],[82,72,79,70],[82,73,79,71],[84,8,81,6],[85,8,82,6],[85,12,82,10,"soundRef"],[85,20,82,18],[85,21,82,19,"current"],[85,28,82,26],[85,30,82,28],[86,10,83,8,"console"],[86,17,83,15],[86,18,83,16,"log"],[86,21,83,19],[86,22,83,20],[86,53,83,51],[86,54,83,52],[87,10,84,8],[87,14,84,12],[88,12,85,10],[88,18,85,16,"soundRef"],[88,26,85,24],[88,27,85,25,"current"],[88,34,85,32],[88,35,85,33,"stopAsync"],[88,44,85,42],[88,45,85,43],[88,46,85,44],[89,12,86,10],[89,18,86,16,"soundRef"],[89,26,86,24],[89,27,86,25,"current"],[89,34,86,32],[89,35,86,33,"unloadAsync"],[89,46,86,44],[89,47,86,45],[89,48,86,46],[90,10,87,8],[90,11,87,9],[90,12,87,10],[90,19,87,17,"e"],[90,20,87,18],[90,22,87,20],[91,12,88,10,"console"],[91,19,88,17],[91,20,88,18,"log"],[91,23,88,21],[91,24,88,22],[91,59,88,57],[91,61,88,59,"e"],[91,62,88,60],[91,63,88,61],[92,10,89,8],[93,10,90,8,"soundRef"],[93,18,90,16],[93,19,90,17,"current"],[93,26,90,24],[93,29,90,27],[93,33,90,31],[94,8,91,6],[96,8,93,6],[97,8,94,6],[97,14,94,12,"Audio"],[97,21,94,17],[97,22,94,17,"Audio"],[97,27,94,17],[97,28,94,18,"setAudioModeAsync"],[97,45,94,35],[97,46,94,36],[98,10,95,8,"allowsRecordingIOS"],[98,28,95,26],[98,30,95,28],[98,35,95,33],[99,10,96,8,"playsInSilentModeIOS"],[99,30,96,28],[99,32,96,30],[99,36,96,34],[100,10,97,8,"shouldDuckAndroid"],[100,27,97,25],[100,29,97,27],[100,33,97,31],[101,10,98,8,"playThroughEarpieceAndroid"],[101,36,98,34],[101,38,98,36],[101,43,98,41],[102,10,99,8,"staysActiveInBackground"],[102,33,99,31],[102,35,99,33],[103,8,100,6],[103,9,100,7],[103,10,100,8],[104,8,102,6,"console"],[104,15,102,13],[104,16,102,14,"log"],[104,19,102,17],[104,20,102,18],[104,60,102,58],[104,61,102,59],[106,8,104,6],[107,8,105,6],[107,14,105,12],[108,10,105,14,"sound"],[109,8,105,20],[109,9,105,21],[109,12,105,24],[109,18,105,30,"Audio"],[109,25,105,35],[109,26,105,35,"Audio"],[109,31,105,35],[109,32,105,36,"Sound"],[109,37,105,41],[109,38,105,42,"createAsync"],[109,49,105,53],[109,50,106,8],[110,10,106,10,"uri"],[111,8,106,14],[111,9,106,15],[111,11,107,8],[112,10,107,10,"shouldPlay"],[112,20,107,20],[112,22,107,22],[113,8,107,28],[113,9,107,29],[114,8,107,31],[115,8,108,8,"onPlaybackStatusUpdate"],[115,30,109,6],[115,31,109,7],[116,8,111,6,"soundRef"],[116,16,111,14],[116,17,111,15,"current"],[116,24,111,22],[116,27,111,25,"sound"],[116,32,111,30],[117,8,112,6,"console"],[117,15,112,13],[117,16,112,14,"log"],[117,19,112,17],[117,20,112,18],[117,50,112,48],[117,51,112,49],[119,8,114,6],[120,8,115,6],[120,14,115,12,"status"],[120,20,115,18],[120,23,115,21],[120,29,115,27,"sound"],[120,34,115,32],[120,35,115,33,"getStatusAsync"],[120,49,115,47],[120,50,115,48],[120,51,115,49],[121,8,116,6,"console"],[121,15,116,13],[121,16,116,14,"log"],[121,19,116,17],[121,20,116,18],[121,38,116,36],[121,40,116,38,"status"],[121,46,116,44],[121,47,116,45],[122,8,118,6],[122,12,118,10,"status"],[122,18,118,16],[122,19,118,17,"isLoaded"],[122,27,118,25],[122,29,118,27],[123,10,119,8,"console"],[123,17,119,15],[123,18,119,16,"log"],[123,21,119,19],[123,22,119,20],[123,47,119,45],[123,48,119,46],[124,10,120,8],[124,16,120,14,"sound"],[124,21,120,19],[124,22,120,20,"playAsync"],[124,31,120,29],[124,32,120,30],[124,33,120,31],[125,10,121,8,"setIsPlaying"],[125,22,121,20],[125,23,121,21],[125,27,121,25],[125,28,121,26],[126,10,122,8,"console"],[126,17,122,15],[126,18,122,16,"log"],[126,21,122,19],[126,22,122,20],[126,40,122,38],[126,41,122,39],[127,8,123,6],[127,9,123,7],[127,15,123,13],[128,10,124,8],[128,16,124,14],[128,20,124,18,"Error"],[128,25,124,23],[128,26,124,24],[128,48,124,46],[128,49,124,47],[129,8,125,6],[130,8,127,6,"setIsLoading"],[130,20,127,18],[130,21,127,19],[130,26,127,24],[130,27,127,25],[131,6,128,4],[131,7,128,5],[131,8,128,6],[131,15,128,13,"error"],[131,20,128,18],[131,22,128,20],[132,8,129,6,"console"],[132,15,129,13],[132,16,129,14,"error"],[132,21,129,19],[132,22,129,20],[132,47,129,45],[132,49,129,47,"error"],[132,54,129,52],[132,55,129,53],[133,8,130,6],[133,12,130,10,"error"],[133,17,130,15],[133,29,130,27,"Error"],[133,34,130,32],[133,36,130,34],[134,10,131,8,"console"],[134,17,131,15],[134,18,131,16,"error"],[134,23,131,21],[134,24,131,22],[134,42,131,40],[134,44,131,42,"error"],[134,49,131,47],[134,50,131,48,"message"],[134,57,131,55],[134,59,131,57,"error"],[134,64,131,62],[134,65,131,63,"stack"],[134,70,131,68],[134,71,131,69],[135,8,132,6],[136,8,133,6,"setIsLoading"],[136,20,133,18],[136,21,133,19],[136,26,133,24],[136,27,133,25],[137,8,134,6,"setIsPlaying"],[137,20,134,18],[137,21,134,19],[137,26,134,24],[137,27,134,25],[138,6,135,4],[139,4,136,2],[139,5,136,3],[140,4,138,2],[140,10,138,8,"onPlaybackStatusUpdate"],[140,32,138,30],[140,35,138,34,"status"],[140,41,138,45],[140,45,138,50],[141,6,139,4],[141,10,139,8,"status"],[141,16,139,14],[141,17,139,15,"didJustFinish"],[141,30,139,28],[141,32,139,30],[142,8,140,6,"console"],[142,15,140,13],[142,16,140,14,"log"],[142,19,140,17],[142,20,140,18],[142,46,140,44],[142,47,140,45],[143,8,141,6,"setIsPlaying"],[143,20,141,18],[143,21,141,19],[143,26,141,24],[143,27,141,25],[144,8,142,6],[144,12,142,10,"soundRef"],[144,20,142,18],[144,21,142,19,"current"],[144,28,142,26],[144,30,142,28],[145,10,143,8,"soundRef"],[145,18,143,16],[145,19,143,17,"current"],[145,26,143,24],[145,27,143,25,"unloadAsync"],[145,38,143,36],[145,39,143,37],[145,40,143,38],[146,8,144,6],[147,6,145,4],[148,4,146,2],[148,5,146,3],[149,4,148,2],[149,10,148,8,"stopAudio"],[149,19,148,17],[149,22,148,20],[149,28,148,20,"stopAudio"],[149,29,148,20],[149,34,148,32],[150,6,149,4],[150,10,149,8,"soundRef"],[150,18,149,16],[150,19,149,17,"current"],[150,26,149,24],[150,28,149,26],[151,8,150,6],[151,14,150,12,"soundRef"],[151,22,150,20],[151,23,150,21,"current"],[151,30,150,28],[151,31,150,29,"stopAsync"],[151,40,150,38],[151,41,150,39],[151,42,150,40],[152,8,151,6],[152,14,151,12,"soundRef"],[152,22,151,20],[152,23,151,21,"current"],[152,30,151,28],[152,31,151,29,"unloadAsync"],[152,42,151,40],[152,43,151,41],[152,44,151,42],[153,8,152,6,"soundRef"],[153,16,152,14],[153,17,152,15,"current"],[153,24,152,22],[153,27,152,25],[153,31,152,29],[154,6,153,4],[155,6,154,4,"setIsPlaying"],[155,18,154,16],[155,19,154,17],[155,24,154,22],[155,25,154,23],[156,4,155,2],[156,5,155,3],[157,4,157,2],[157,11,157,9],[158,6,158,4,"isPlaying"],[158,15,158,13],[159,6,159,4,"isLoading"],[159,15,159,13],[160,6,160,4,"playAudio"],[160,15,160,13],[161,6,161,4,"stopAudio"],[162,4,162,2],[162,5,162,3],[163,2,163,0],[163,3,163,1],[164,0,163,2],[164,3]],"functionMap":{"names":["<global>","useAudioPlayer","playAudio","reader.onloadend","reader.onerror","playFromUri","onPlaybackStatusUpdate","stopAudio"],"mappings":"AAA;8BCQ;oBCM;yBCmC;ODa;uBEE;OFG;GDO;sBIE;GJ2D;iCKE;GLQ;oBME;GNO;CDQ"},"hasCjsExports":false},"type":"js/module"}]}