{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"expo-av","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":32,"index":74}}],"key":"VxVG0TWBdB+Oc1qOQ32HKtN+H5M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useAudioPlayer\", {\n    enumerable: true,\n    get: function () {\n      return useAudioPlayer;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _expoAv = require(_dependencyMap[1], \"expo-av\");\n  const useAudioPlayer = () => {\n    const [isPlaying, setIsPlaying] = (0, _react.useState)(false);\n    const [isLoading, setIsLoading] = (0, _react.useState)(false);\n    const soundRef = (0, _react.useRef)(null);\n    const cacheRef = (0, _react.useRef)({});\n    const playAudio = async (messageId, text, lang, backendUrl) => {\n      try {\n        // Check cache first\n        if (cacheRef.current[messageId]) {\n          console.log('🔊 Playing from cache:', messageId);\n          await playFromUri(cacheRef.current[messageId]);\n          return;\n        }\n        setIsLoading(true);\n        console.log('🔊 Fetching audio from TTS...');\n\n        // Request TTS from backend\n        const response = await fetch(`${backendUrl}/api/tts`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text,\n            lang,\n            provider: 'elevenlabs'\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`TTS failed: ${response.status}`);\n        }\n\n        // For web/mobile - use data URI directly\n        const blob = await response.blob();\n        const reader = new FileReader();\n        reader.onloadend = async () => {\n          const dataUri = reader.result;\n\n          // Cache the data URI\n          cacheRef.current[messageId] = dataUri;\n          console.log('✅ Audio cached as data URI');\n          await playFromUri(dataUri);\n        };\n        reader.readAsDataURL(blob);\n      } catch (error) {\n        console.error('❌ Audio playback error:', error);\n        setIsLoading(false);\n      }\n    };\n    const playFromUri = async uri => {\n      try {\n        // Stop any currently playing sound\n        if (soundRef.current) {\n          await soundRef.current.stopAsync();\n          await soundRef.current.unloadAsync();\n        }\n\n        // Set audio mode\n        await _expoAv.Audio.setAudioModeAsync({\n          allowsRecordingIOS: false,\n          playsInSilentModeIOS: true,\n          shouldDuckAndroid: true,\n          playThroughEarpieceAndroid: false\n        });\n        console.log('🔊 Loading sound:', uri);\n        const {\n          sound\n        } = await _expoAv.Audio.Sound.createAsync({\n          uri\n        }, {\n          shouldPlay: true\n        }, onPlaybackStatusUpdate);\n        soundRef.current = sound;\n        setIsLoading(false);\n        setIsPlaying(true);\n      } catch (error) {\n        console.error('❌ Failed to play audio:', error);\n        setIsLoading(false);\n        setIsPlaying(false);\n      }\n    };\n    const onPlaybackStatusUpdate = status => {\n      if (status.didJustFinish) {\n        console.log('✅ Audio finished playing');\n        setIsPlaying(false);\n        if (soundRef.current) {\n          soundRef.current.unloadAsync();\n        }\n      }\n    };\n    const stopAudio = async () => {\n      if (soundRef.current) {\n        await soundRef.current.stopAsync();\n        await soundRef.current.unloadAsync();\n        soundRef.current = null;\n      }\n      setIsPlaying(false);\n    };\n    return {\n      isPlaying,\n      isLoading,\n      playAudio,\n      stopAudio\n    };\n  };\n});","lineCount":120,"map":[[7,2,9,0,"Object"],[7,8,9,0],[7,9,9,0,"defineProperty"],[7,23,9,0],[7,24,9,0,"exports"],[7,31,9,0],[8,4,9,0,"enumerable"],[8,14,9,0],[9,4,9,0,"get"],[9,7,9,0],[9,18,9,0,"get"],[9,19,9,0],[10,6,9,0],[10,13,9,0,"useAudioPlayer"],[10,27,9,0],[11,4,9,0],[12,2,9,0],[13,2,1,0],[13,6,1,0,"_react"],[13,12,1,0],[13,15,1,0,"require"],[13,22,1,0],[13,23,1,0,"_dependencyMap"],[13,37,1,0],[14,2,2,0],[14,6,2,0,"_expoAv"],[14,13,2,0],[14,16,2,0,"require"],[14,23,2,0],[14,24,2,0,"_dependencyMap"],[14,38,2,0],[15,2,9,7],[15,8,9,13,"useAudioPlayer"],[15,22,9,27],[15,25,9,30,"useAudioPlayer"],[15,26,9,30],[15,31,9,36],[16,4,10,2],[16,10,10,8],[16,11,10,9,"isPlaying"],[16,20,10,18],[16,22,10,20,"setIsPlaying"],[16,34,10,32],[16,35,10,33],[16,38,10,36],[16,42,10,36,"useState"],[16,48,10,44],[16,49,10,44,"useState"],[16,57,10,44],[16,59,10,45],[16,64,10,50],[16,65,10,51],[17,4,11,2],[17,10,11,8],[17,11,11,9,"isLoading"],[17,20,11,18],[17,22,11,20,"setIsLoading"],[17,34,11,32],[17,35,11,33],[17,38,11,36],[17,42,11,36,"useState"],[17,48,11,44],[17,49,11,44,"useState"],[17,57,11,44],[17,59,11,45],[17,64,11,50],[17,65,11,51],[18,4,12,2],[18,10,12,8,"soundRef"],[18,18,12,16],[18,21,12,19],[18,25,12,19,"useRef"],[18,31,12,25],[18,32,12,25,"useRef"],[18,38,12,25],[18,40,12,46],[18,44,12,50],[18,45,12,51],[19,4,13,2],[19,10,13,8,"cacheRef"],[19,18,13,16],[19,21,13,19],[19,25,13,19,"useRef"],[19,31,13,25],[19,32,13,25,"useRef"],[19,38,13,25],[19,40,13,38],[19,41,13,39],[19,42,13,40],[19,43,13,41],[20,4,15,2],[20,10,15,8,"playAudio"],[20,19,15,17],[20,22,15,20],[20,28,15,20,"playAudio"],[20,29,15,27,"messageId"],[20,38,15,44],[20,40,15,46,"text"],[20,44,15,58],[20,46,15,60,"lang"],[20,50,15,72],[20,52,15,74,"backendUrl"],[20,62,15,92],[20,67,15,97],[21,6,16,4],[21,10,16,8],[22,8,17,6],[23,8,18,6],[23,12,18,10,"cacheRef"],[23,20,18,18],[23,21,18,19,"current"],[23,28,18,26],[23,29,18,27,"messageId"],[23,38,18,36],[23,39,18,37],[23,41,18,39],[24,10,19,8,"console"],[24,17,19,15],[24,18,19,16,"log"],[24,21,19,19],[24,22,19,20],[24,46,19,44],[24,48,19,46,"messageId"],[24,57,19,55],[24,58,19,56],[25,10,20,8],[25,16,20,14,"playFromUri"],[25,27,20,25],[25,28,20,26,"cacheRef"],[25,36,20,34],[25,37,20,35,"current"],[25,44,20,42],[25,45,20,43,"messageId"],[25,54,20,52],[25,55,20,53],[25,56,20,54],[26,10,21,8],[27,8,22,6],[28,8,24,6,"setIsLoading"],[28,20,24,18],[28,21,24,19],[28,25,24,23],[28,26,24,24],[29,8,25,6,"console"],[29,15,25,13],[29,16,25,14,"log"],[29,19,25,17],[29,20,25,18],[29,51,25,49],[29,52,25,50],[31,8,27,6],[32,8,28,6],[32,14,28,12,"response"],[32,22,28,20],[32,25,28,23],[32,31,28,29,"fetch"],[32,36,28,34],[32,37,28,35],[32,40,28,38,"backendUrl"],[32,50,28,48],[32,60,28,58],[32,62,28,60],[33,10,29,8,"method"],[33,16,29,14],[33,18,29,16],[33,24,29,22],[34,10,30,8,"headers"],[34,17,30,15],[34,19,30,17],[35,12,31,10],[35,26,31,24],[35,28,31,26],[36,10,32,8],[36,11,32,9],[37,10,33,8,"body"],[37,14,33,12],[37,16,33,14,"JSON"],[37,20,33,18],[37,21,33,19,"stringify"],[37,30,33,28],[37,31,33,29],[38,12,33,31,"text"],[38,16,33,35],[39,12,33,37,"lang"],[39,16,33,41],[40,12,33,43,"provider"],[40,20,33,51],[40,22,33,53],[41,10,33,66],[41,11,33,67],[42,8,34,6],[42,9,34,7],[42,10,34,8],[43,8,36,6],[43,12,36,10],[43,13,36,11,"response"],[43,21,36,19],[43,22,36,20,"ok"],[43,24,36,22],[43,26,36,24],[44,10,37,8],[44,16,37,14],[44,20,37,18,"Error"],[44,25,37,23],[44,26,37,24],[44,41,37,39,"response"],[44,49,37,47],[44,50,37,48,"status"],[44,56,37,54],[44,58,37,56],[44,59,37,57],[45,8,38,6],[47,8,40,6],[48,8,41,6],[48,14,41,12,"blob"],[48,18,41,16],[48,21,41,19],[48,27,41,25,"response"],[48,35,41,33],[48,36,41,34,"blob"],[48,40,41,38],[48,41,41,39],[48,42,41,40],[49,8,42,6],[49,14,42,12,"reader"],[49,20,42,18],[49,23,42,21],[49,27,42,25,"FileReader"],[49,37,42,35],[49,38,42,36],[49,39,42,37],[50,8,44,6,"reader"],[50,14,44,12],[50,15,44,13,"onloadend"],[50,24,44,22],[50,27,44,25],[50,39,44,37],[51,10,45,8],[51,16,45,14,"dataUri"],[51,23,45,21],[51,26,45,24,"reader"],[51,32,45,30],[51,33,45,31,"result"],[51,39,45,47],[53,10,47,8],[54,10,48,8,"cacheRef"],[54,18,48,16],[54,19,48,17,"current"],[54,26,48,24],[54,27,48,25,"messageId"],[54,36,48,34],[54,37,48,35],[54,40,48,38,"dataUri"],[54,47,48,45],[55,10,50,8,"console"],[55,17,50,15],[55,18,50,16,"log"],[55,21,50,19],[55,22,50,20],[55,50,50,48],[55,51,50,49],[56,10,51,8],[56,16,51,14,"playFromUri"],[56,27,51,25],[56,28,51,26,"dataUri"],[56,35,51,33],[56,36,51,34],[57,8,52,6],[57,9,52,7],[58,8,54,6,"reader"],[58,14,54,12],[58,15,54,13,"readAsDataURL"],[58,28,54,26],[58,29,54,27,"blob"],[58,33,54,31],[58,34,54,32],[59,6,55,4],[59,7,55,5],[59,8,55,6],[59,15,55,13,"error"],[59,20,55,18],[59,22,55,20],[60,8,56,6,"console"],[60,15,56,13],[60,16,56,14,"error"],[60,21,56,19],[60,22,56,20],[60,47,56,45],[60,49,56,47,"error"],[60,54,56,52],[60,55,56,53],[61,8,57,6,"setIsLoading"],[61,20,57,18],[61,21,57,19],[61,26,57,24],[61,27,57,25],[62,6,58,4],[63,4,59,2],[63,5,59,3],[64,4,61,2],[64,10,61,8,"playFromUri"],[64,21,61,19],[64,24,61,22],[64,30,61,29,"uri"],[64,33,61,40],[64,37,61,45],[65,6,62,4],[65,10,62,8],[66,8,63,6],[67,8,64,6],[67,12,64,10,"soundRef"],[67,20,64,18],[67,21,64,19,"current"],[67,28,64,26],[67,30,64,28],[68,10,65,8],[68,16,65,14,"soundRef"],[68,24,65,22],[68,25,65,23,"current"],[68,32,65,30],[68,33,65,31,"stopAsync"],[68,42,65,40],[68,43,65,41],[68,44,65,42],[69,10,66,8],[69,16,66,14,"soundRef"],[69,24,66,22],[69,25,66,23,"current"],[69,32,66,30],[69,33,66,31,"unloadAsync"],[69,44,66,42],[69,45,66,43],[69,46,66,44],[70,8,67,6],[72,8,69,6],[73,8,70,6],[73,14,70,12,"Audio"],[73,21,70,17],[73,22,70,17,"Audio"],[73,27,70,17],[73,28,70,18,"setAudioModeAsync"],[73,45,70,35],[73,46,70,36],[74,10,71,8,"allowsRecordingIOS"],[74,28,71,26],[74,30,71,28],[74,35,71,33],[75,10,72,8,"playsInSilentModeIOS"],[75,30,72,28],[75,32,72,30],[75,36,72,34],[76,10,73,8,"shouldDuckAndroid"],[76,27,73,25],[76,29,73,27],[76,33,73,31],[77,10,74,8,"playThroughEarpieceAndroid"],[77,36,74,34],[77,38,74,36],[78,8,75,6],[78,9,75,7],[78,10,75,8],[79,8,77,6,"console"],[79,15,77,13],[79,16,77,14,"log"],[79,19,77,17],[79,20,77,18],[79,39,77,37],[79,41,77,39,"uri"],[79,44,77,42],[79,45,77,43],[80,8,78,6],[80,14,78,12],[81,10,78,14,"sound"],[82,8,78,20],[82,9,78,21],[82,12,78,24],[82,18,78,30,"Audio"],[82,25,78,35],[82,26,78,35,"Audio"],[82,31,78,35],[82,32,78,36,"Sound"],[82,37,78,41],[82,38,78,42,"createAsync"],[82,49,78,53],[82,50,79,8],[83,10,79,10,"uri"],[84,8,79,14],[84,9,79,15],[84,11,80,8],[85,10,80,10,"shouldPlay"],[85,20,80,20],[85,22,80,22],[86,8,80,27],[86,9,80,28],[86,11,81,8,"onPlaybackStatusUpdate"],[86,33,82,6],[86,34,82,7],[87,8,84,6,"soundRef"],[87,16,84,14],[87,17,84,15,"current"],[87,24,84,22],[87,27,84,25,"sound"],[87,32,84,30],[88,8,85,6,"setIsLoading"],[88,20,85,18],[88,21,85,19],[88,26,85,24],[88,27,85,25],[89,8,86,6,"setIsPlaying"],[89,20,86,18],[89,21,86,19],[89,25,86,23],[89,26,86,24],[90,6,87,4],[90,7,87,5],[90,8,87,6],[90,15,87,13,"error"],[90,20,87,18],[90,22,87,20],[91,8,88,6,"console"],[91,15,88,13],[91,16,88,14,"error"],[91,21,88,19],[91,22,88,20],[91,47,88,45],[91,49,88,47,"error"],[91,54,88,52],[91,55,88,53],[92,8,89,6,"setIsLoading"],[92,20,89,18],[92,21,89,19],[92,26,89,24],[92,27,89,25],[93,8,90,6,"setIsPlaying"],[93,20,90,18],[93,21,90,19],[93,26,90,24],[93,27,90,25],[94,6,91,4],[95,4,92,2],[95,5,92,3],[96,4,94,2],[96,10,94,8,"onPlaybackStatusUpdate"],[96,32,94,30],[96,35,94,34,"status"],[96,41,94,45],[96,45,94,50],[97,6,95,4],[97,10,95,8,"status"],[97,16,95,14],[97,17,95,15,"didJustFinish"],[97,30,95,28],[97,32,95,30],[98,8,96,6,"console"],[98,15,96,13],[98,16,96,14,"log"],[98,19,96,17],[98,20,96,18],[98,46,96,44],[98,47,96,45],[99,8,97,6,"setIsPlaying"],[99,20,97,18],[99,21,97,19],[99,26,97,24],[99,27,97,25],[100,8,98,6],[100,12,98,10,"soundRef"],[100,20,98,18],[100,21,98,19,"current"],[100,28,98,26],[100,30,98,28],[101,10,99,8,"soundRef"],[101,18,99,16],[101,19,99,17,"current"],[101,26,99,24],[101,27,99,25,"unloadAsync"],[101,38,99,36],[101,39,99,37],[101,40,99,38],[102,8,100,6],[103,6,101,4],[104,4,102,2],[104,5,102,3],[105,4,104,2],[105,10,104,8,"stopAudio"],[105,19,104,17],[105,22,104,20],[105,28,104,20,"stopAudio"],[105,29,104,20],[105,34,104,32],[106,6,105,4],[106,10,105,8,"soundRef"],[106,18,105,16],[106,19,105,17,"current"],[106,26,105,24],[106,28,105,26],[107,8,106,6],[107,14,106,12,"soundRef"],[107,22,106,20],[107,23,106,21,"current"],[107,30,106,28],[107,31,106,29,"stopAsync"],[107,40,106,38],[107,41,106,39],[107,42,106,40],[108,8,107,6],[108,14,107,12,"soundRef"],[108,22,107,20],[108,23,107,21,"current"],[108,30,107,28],[108,31,107,29,"unloadAsync"],[108,42,107,40],[108,43,107,41],[108,44,107,42],[109,8,108,6,"soundRef"],[109,16,108,14],[109,17,108,15,"current"],[109,24,108,22],[109,27,108,25],[109,31,108,29],[110,6,109,4],[111,6,110,4,"setIsPlaying"],[111,18,110,16],[111,19,110,17],[111,24,110,22],[111,25,110,23],[112,4,111,2],[112,5,111,3],[113,4,113,2],[113,11,113,9],[114,6,114,4,"isPlaying"],[114,15,114,13],[115,6,115,4,"isLoading"],[115,15,115,13],[116,6,116,4,"playAudio"],[116,15,116,13],[117,6,117,4,"stopAudio"],[118,4,118,2],[118,5,118,3],[119,2,119,0],[119,3,119,1],[120,0,119,2],[120,3]],"functionMap":{"names":["<global>","useAudioPlayer","playAudio","reader.onloadend","playFromUri","onPlaybackStatusUpdate","stopAudio"],"mappings":"AAA;8BCQ;oBCM;yBC6B;ODQ;GDO;sBGE;GH+B;iCIE;GJQ;oBKE;GLO;CDQ"},"hasCjsExports":false},"type":"js/module"}]}