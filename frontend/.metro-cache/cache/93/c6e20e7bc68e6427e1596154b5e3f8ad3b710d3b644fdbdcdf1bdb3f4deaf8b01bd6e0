{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"expo-av","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":32,"index":74}}],"key":"VxVG0TWBdB+Oc1qOQ32HKtN+H5M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useAudioPlayer\", {\n    enumerable: true,\n    get: function () {\n      return useAudioPlayer;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _expoAv = require(_dependencyMap[1], \"expo-av\");\n  const useAudioPlayer = () => {\n    const [isPlaying, setIsPlaying] = (0, _react.useState)(false);\n    const [isLoading, setIsLoading] = (0, _react.useState)(false);\n    const soundRef = (0, _react.useRef)(null);\n    const cacheRef = (0, _react.useRef)({});\n    const playAudio = async (messageId, text, lang, backendUrl) => {\n      try {\n        // Check cache first\n        if (cacheRef.current[messageId]) {\n          console.log('🔊 Playing from cache:', messageId);\n          await playFromUri(cacheRef.current[messageId]);\n          return;\n        }\n        setIsLoading(true);\n        console.log('🔊 Fetching audio from TTS...', {\n          messageId,\n          text: text.substring(0, 50)\n        });\n\n        // Request TTS from backend (now using OpenAI)\n        const response = await fetch(`${backendUrl}/api/tts`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text,\n            lang,\n            provider: 'openai'\n          })\n        });\n        console.log('📥 TTS Response status:', response.status);\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error('❌ TTS Error:', errorText);\n          throw new Error(`TTS failed: ${response.status} - ${errorText}`);\n        }\n\n        // For web/mobile - use data URI directly\n        const blob = await response.blob();\n        console.log('📦 Blob received:', blob.size, 'bytes');\n        const reader = new FileReader();\n        reader.onloadend = async () => {\n          try {\n            const dataUri = reader.result;\n\n            // Cache the data URI\n            cacheRef.current[messageId] = dataUri;\n            console.log('✅ Audio cached as data URI, playing now...');\n            await playFromUri(dataUri);\n          } catch (playError) {\n            console.error('❌ Play error:', playError);\n            setIsLoading(false);\n          }\n        };\n        reader.onerror = () => {\n          console.error('❌ FileReader error');\n          setIsLoading(false);\n        };\n        reader.readAsDataURL(blob);\n      } catch (error) {\n        console.error('❌ Audio playback error:', error);\n        setIsLoading(false);\n      }\n    };\n    const playFromUri = async uri => {\n      try {\n        // Stop any currently playing sound\n        if (soundRef.current) {\n          await soundRef.current.stopAsync();\n          await soundRef.current.unloadAsync();\n        }\n\n        // Set audio mode\n        await _expoAv.Audio.setAudioModeAsync({\n          allowsRecordingIOS: false,\n          playsInSilentModeIOS: true,\n          shouldDuckAndroid: true,\n          playThroughEarpieceAndroid: false\n        });\n        console.log('🔊 Loading sound:', uri);\n        const {\n          sound\n        } = await _expoAv.Audio.Sound.createAsync({\n          uri\n        }, {\n          shouldPlay: true\n        }, onPlaybackStatusUpdate);\n        soundRef.current = sound;\n        setIsLoading(false);\n        setIsPlaying(true);\n      } catch (error) {\n        console.error('❌ Failed to play audio:', error);\n        setIsLoading(false);\n        setIsPlaying(false);\n      }\n    };\n    const onPlaybackStatusUpdate = status => {\n      if (status.didJustFinish) {\n        console.log('✅ Audio finished playing');\n        setIsPlaying(false);\n        if (soundRef.current) {\n          soundRef.current.unloadAsync();\n        }\n      }\n    };\n    const stopAudio = async () => {\n      if (soundRef.current) {\n        await soundRef.current.stopAsync();\n        await soundRef.current.unloadAsync();\n        soundRef.current = null;\n      }\n      setIsPlaying(false);\n    };\n    return {\n      isPlaying,\n      isLoading,\n      playAudio,\n      stopAudio\n    };\n  };\n});","lineCount":136,"map":[[7,2,9,0,"Object"],[7,8,9,0],[7,9,9,0,"defineProperty"],[7,23,9,0],[7,24,9,0,"exports"],[7,31,9,0],[8,4,9,0,"enumerable"],[8,14,9,0],[9,4,9,0,"get"],[9,7,9,0],[9,18,9,0,"get"],[9,19,9,0],[10,6,9,0],[10,13,9,0,"useAudioPlayer"],[10,27,9,0],[11,4,9,0],[12,2,9,0],[13,2,1,0],[13,6,1,0,"_react"],[13,12,1,0],[13,15,1,0,"require"],[13,22,1,0],[13,23,1,0,"_dependencyMap"],[13,37,1,0],[14,2,2,0],[14,6,2,0,"_expoAv"],[14,13,2,0],[14,16,2,0,"require"],[14,23,2,0],[14,24,2,0,"_dependencyMap"],[14,38,2,0],[15,2,9,7],[15,8,9,13,"useAudioPlayer"],[15,22,9,27],[15,25,9,30,"useAudioPlayer"],[15,26,9,30],[15,31,9,36],[16,4,10,2],[16,10,10,8],[16,11,10,9,"isPlaying"],[16,20,10,18],[16,22,10,20,"setIsPlaying"],[16,34,10,32],[16,35,10,33],[16,38,10,36],[16,42,10,36,"useState"],[16,48,10,44],[16,49,10,44,"useState"],[16,57,10,44],[16,59,10,45],[16,64,10,50],[16,65,10,51],[17,4,11,2],[17,10,11,8],[17,11,11,9,"isLoading"],[17,20,11,18],[17,22,11,20,"setIsLoading"],[17,34,11,32],[17,35,11,33],[17,38,11,36],[17,42,11,36,"useState"],[17,48,11,44],[17,49,11,44,"useState"],[17,57,11,44],[17,59,11,45],[17,64,11,50],[17,65,11,51],[18,4,12,2],[18,10,12,8,"soundRef"],[18,18,12,16],[18,21,12,19],[18,25,12,19,"useRef"],[18,31,12,25],[18,32,12,25,"useRef"],[18,38,12,25],[18,40,12,46],[18,44,12,50],[18,45,12,51],[19,4,13,2],[19,10,13,8,"cacheRef"],[19,18,13,16],[19,21,13,19],[19,25,13,19,"useRef"],[19,31,13,25],[19,32,13,25,"useRef"],[19,38,13,25],[19,40,13,38],[19,41,13,39],[19,42,13,40],[19,43,13,41],[20,4,15,2],[20,10,15,8,"playAudio"],[20,19,15,17],[20,22,15,20],[20,28,15,20,"playAudio"],[20,29,15,27,"messageId"],[20,38,15,44],[20,40,15,46,"text"],[20,44,15,58],[20,46,15,60,"lang"],[20,50,15,72],[20,52,15,74,"backendUrl"],[20,62,15,92],[20,67,15,97],[21,6,16,4],[21,10,16,8],[22,8,17,6],[23,8,18,6],[23,12,18,10,"cacheRef"],[23,20,18,18],[23,21,18,19,"current"],[23,28,18,26],[23,29,18,27,"messageId"],[23,38,18,36],[23,39,18,37],[23,41,18,39],[24,10,19,8,"console"],[24,17,19,15],[24,18,19,16,"log"],[24,21,19,19],[24,22,19,20],[24,46,19,44],[24,48,19,46,"messageId"],[24,57,19,55],[24,58,19,56],[25,10,20,8],[25,16,20,14,"playFromUri"],[25,27,20,25],[25,28,20,26,"cacheRef"],[25,36,20,34],[25,37,20,35,"current"],[25,44,20,42],[25,45,20,43,"messageId"],[25,54,20,52],[25,55,20,53],[25,56,20,54],[26,10,21,8],[27,8,22,6],[28,8,24,6,"setIsLoading"],[28,20,24,18],[28,21,24,19],[28,25,24,23],[28,26,24,24],[29,8,25,6,"console"],[29,15,25,13],[29,16,25,14,"log"],[29,19,25,17],[29,20,25,18],[29,51,25,49],[29,53,25,51],[30,10,25,53,"messageId"],[30,19,25,62],[31,10,25,64,"text"],[31,14,25,68],[31,16,25,70,"text"],[31,20,25,74],[31,21,25,75,"substring"],[31,30,25,84],[31,31,25,85],[31,32,25,86],[31,34,25,88],[31,36,25,90],[32,8,25,92],[32,9,25,93],[32,10,25,94],[34,8,27,6],[35,8,28,6],[35,14,28,12,"response"],[35,22,28,20],[35,25,28,23],[35,31,28,29,"fetch"],[35,36,28,34],[35,37,28,35],[35,40,28,38,"backendUrl"],[35,50,28,48],[35,60,28,58],[35,62,28,60],[36,10,29,8,"method"],[36,16,29,14],[36,18,29,16],[36,24,29,22],[37,10,30,8,"headers"],[37,17,30,15],[37,19,30,17],[38,12,31,10],[38,26,31,24],[38,28,31,26],[39,10,32,8],[39,11,32,9],[40,10,33,8,"body"],[40,14,33,12],[40,16,33,14,"JSON"],[40,20,33,18],[40,21,33,19,"stringify"],[40,30,33,28],[40,31,33,29],[41,12,33,31,"text"],[41,16,33,35],[42,12,33,37,"lang"],[42,16,33,41],[43,12,33,43,"provider"],[43,20,33,51],[43,22,33,53],[44,10,33,62],[44,11,33,63],[45,8,34,6],[45,9,34,7],[45,10,34,8],[46,8,36,6,"console"],[46,15,36,13],[46,16,36,14,"log"],[46,19,36,17],[46,20,36,18],[46,45,36,43],[46,47,36,45,"response"],[46,55,36,53],[46,56,36,54,"status"],[46,62,36,60],[46,63,36,61],[47,8,38,6],[47,12,38,10],[47,13,38,11,"response"],[47,21,38,19],[47,22,38,20,"ok"],[47,24,38,22],[47,26,38,24],[48,10,39,8],[48,16,39,14,"errorText"],[48,25,39,23],[48,28,39,26],[48,34,39,32,"response"],[48,42,39,40],[48,43,39,41,"text"],[48,47,39,45],[48,48,39,46],[48,49,39,47],[49,10,40,8,"console"],[49,17,40,15],[49,18,40,16,"error"],[49,23,40,21],[49,24,40,22],[49,38,40,36],[49,40,40,38,"errorText"],[49,49,40,47],[49,50,40,48],[50,10,41,8],[50,16,41,14],[50,20,41,18,"Error"],[50,25,41,23],[50,26,41,24],[50,41,41,39,"response"],[50,49,41,47],[50,50,41,48,"status"],[50,56,41,54],[50,62,41,60,"errorText"],[50,71,41,69],[50,73,41,71],[50,74,41,72],[51,8,42,6],[53,8,44,6],[54,8,45,6],[54,14,45,12,"blob"],[54,18,45,16],[54,21,45,19],[54,27,45,25,"response"],[54,35,45,33],[54,36,45,34,"blob"],[54,40,45,38],[54,41,45,39],[54,42,45,40],[55,8,46,6,"console"],[55,15,46,13],[55,16,46,14,"log"],[55,19,46,17],[55,20,46,18],[55,39,46,37],[55,41,46,39,"blob"],[55,45,46,43],[55,46,46,44,"size"],[55,50,46,48],[55,52,46,50],[55,59,46,57],[55,60,46,58],[56,8,48,6],[56,14,48,12,"reader"],[56,20,48,18],[56,23,48,21],[56,27,48,25,"FileReader"],[56,37,48,35],[56,38,48,36],[56,39,48,37],[57,8,50,6,"reader"],[57,14,50,12],[57,15,50,13,"onloadend"],[57,24,50,22],[57,27,50,25],[57,39,50,37],[58,10,51,8],[58,14,51,12],[59,12,52,10],[59,18,52,16,"dataUri"],[59,25,52,23],[59,28,52,26,"reader"],[59,34,52,32],[59,35,52,33,"result"],[59,41,52,49],[61,12,54,10],[62,12,55,10,"cacheRef"],[62,20,55,18],[62,21,55,19,"current"],[62,28,55,26],[62,29,55,27,"messageId"],[62,38,55,36],[62,39,55,37],[62,42,55,40,"dataUri"],[62,49,55,47],[63,12,57,10,"console"],[63,19,57,17],[63,20,57,18,"log"],[63,23,57,21],[63,24,57,22],[63,68,57,66],[63,69,57,67],[64,12,58,10],[64,18,58,16,"playFromUri"],[64,29,58,27],[64,30,58,28,"dataUri"],[64,37,58,35],[64,38,58,36],[65,10,59,8],[65,11,59,9],[65,12,59,10],[65,19,59,17,"playError"],[65,28,59,26],[65,30,59,28],[66,12,60,10,"console"],[66,19,60,17],[66,20,60,18,"error"],[66,25,60,23],[66,26,60,24],[66,41,60,39],[66,43,60,41,"playError"],[66,52,60,50],[66,53,60,51],[67,12,61,10,"setIsLoading"],[67,24,61,22],[67,25,61,23],[67,30,61,28],[67,31,61,29],[68,10,62,8],[69,8,63,6],[69,9,63,7],[70,8,65,6,"reader"],[70,14,65,12],[70,15,65,13,"onerror"],[70,22,65,20],[70,25,65,23],[70,31,65,29],[71,10,66,8,"console"],[71,17,66,15],[71,18,66,16,"error"],[71,23,66,21],[71,24,66,22],[71,44,66,42],[71,45,66,43],[72,10,67,8,"setIsLoading"],[72,22,67,20],[72,23,67,21],[72,28,67,26],[72,29,67,27],[73,8,68,6],[73,9,68,7],[74,8,70,6,"reader"],[74,14,70,12],[74,15,70,13,"readAsDataURL"],[74,28,70,26],[74,29,70,27,"blob"],[74,33,70,31],[74,34,70,32],[75,6,71,4],[75,7,71,5],[75,8,71,6],[75,15,71,13,"error"],[75,20,71,18],[75,22,71,20],[76,8,72,6,"console"],[76,15,72,13],[76,16,72,14,"error"],[76,21,72,19],[76,22,72,20],[76,47,72,45],[76,49,72,47,"error"],[76,54,72,52],[76,55,72,53],[77,8,73,6,"setIsLoading"],[77,20,73,18],[77,21,73,19],[77,26,73,24],[77,27,73,25],[78,6,74,4],[79,4,75,2],[79,5,75,3],[80,4,77,2],[80,10,77,8,"playFromUri"],[80,21,77,19],[80,24,77,22],[80,30,77,29,"uri"],[80,33,77,40],[80,37,77,45],[81,6,78,4],[81,10,78,8],[82,8,79,6],[83,8,80,6],[83,12,80,10,"soundRef"],[83,20,80,18],[83,21,80,19,"current"],[83,28,80,26],[83,30,80,28],[84,10,81,8],[84,16,81,14,"soundRef"],[84,24,81,22],[84,25,81,23,"current"],[84,32,81,30],[84,33,81,31,"stopAsync"],[84,42,81,40],[84,43,81,41],[84,44,81,42],[85,10,82,8],[85,16,82,14,"soundRef"],[85,24,82,22],[85,25,82,23,"current"],[85,32,82,30],[85,33,82,31,"unloadAsync"],[85,44,82,42],[85,45,82,43],[85,46,82,44],[86,8,83,6],[88,8,85,6],[89,8,86,6],[89,14,86,12,"Audio"],[89,21,86,17],[89,22,86,17,"Audio"],[89,27,86,17],[89,28,86,18,"setAudioModeAsync"],[89,45,86,35],[89,46,86,36],[90,10,87,8,"allowsRecordingIOS"],[90,28,87,26],[90,30,87,28],[90,35,87,33],[91,10,88,8,"playsInSilentModeIOS"],[91,30,88,28],[91,32,88,30],[91,36,88,34],[92,10,89,8,"shouldDuckAndroid"],[92,27,89,25],[92,29,89,27],[92,33,89,31],[93,10,90,8,"playThroughEarpieceAndroid"],[93,36,90,34],[93,38,90,36],[94,8,91,6],[94,9,91,7],[94,10,91,8],[95,8,93,6,"console"],[95,15,93,13],[95,16,93,14,"log"],[95,19,93,17],[95,20,93,18],[95,39,93,37],[95,41,93,39,"uri"],[95,44,93,42],[95,45,93,43],[96,8,94,6],[96,14,94,12],[97,10,94,14,"sound"],[98,8,94,20],[98,9,94,21],[98,12,94,24],[98,18,94,30,"Audio"],[98,25,94,35],[98,26,94,35,"Audio"],[98,31,94,35],[98,32,94,36,"Sound"],[98,37,94,41],[98,38,94,42,"createAsync"],[98,49,94,53],[98,50,95,8],[99,10,95,10,"uri"],[100,8,95,14],[100,9,95,15],[100,11,96,8],[101,10,96,10,"shouldPlay"],[101,20,96,20],[101,22,96,22],[102,8,96,27],[102,9,96,28],[102,11,97,8,"onPlaybackStatusUpdate"],[102,33,98,6],[102,34,98,7],[103,8,100,6,"soundRef"],[103,16,100,14],[103,17,100,15,"current"],[103,24,100,22],[103,27,100,25,"sound"],[103,32,100,30],[104,8,101,6,"setIsLoading"],[104,20,101,18],[104,21,101,19],[104,26,101,24],[104,27,101,25],[105,8,102,6,"setIsPlaying"],[105,20,102,18],[105,21,102,19],[105,25,102,23],[105,26,102,24],[106,6,103,4],[106,7,103,5],[106,8,103,6],[106,15,103,13,"error"],[106,20,103,18],[106,22,103,20],[107,8,104,6,"console"],[107,15,104,13],[107,16,104,14,"error"],[107,21,104,19],[107,22,104,20],[107,47,104,45],[107,49,104,47,"error"],[107,54,104,52],[107,55,104,53],[108,8,105,6,"setIsLoading"],[108,20,105,18],[108,21,105,19],[108,26,105,24],[108,27,105,25],[109,8,106,6,"setIsPlaying"],[109,20,106,18],[109,21,106,19],[109,26,106,24],[109,27,106,25],[110,6,107,4],[111,4,108,2],[111,5,108,3],[112,4,110,2],[112,10,110,8,"onPlaybackStatusUpdate"],[112,32,110,30],[112,35,110,34,"status"],[112,41,110,45],[112,45,110,50],[113,6,111,4],[113,10,111,8,"status"],[113,16,111,14],[113,17,111,15,"didJustFinish"],[113,30,111,28],[113,32,111,30],[114,8,112,6,"console"],[114,15,112,13],[114,16,112,14,"log"],[114,19,112,17],[114,20,112,18],[114,46,112,44],[114,47,112,45],[115,8,113,6,"setIsPlaying"],[115,20,113,18],[115,21,113,19],[115,26,113,24],[115,27,113,25],[116,8,114,6],[116,12,114,10,"soundRef"],[116,20,114,18],[116,21,114,19,"current"],[116,28,114,26],[116,30,114,28],[117,10,115,8,"soundRef"],[117,18,115,16],[117,19,115,17,"current"],[117,26,115,24],[117,27,115,25,"unloadAsync"],[117,38,115,36],[117,39,115,37],[117,40,115,38],[118,8,116,6],[119,6,117,4],[120,4,118,2],[120,5,118,3],[121,4,120,2],[121,10,120,8,"stopAudio"],[121,19,120,17],[121,22,120,20],[121,28,120,20,"stopAudio"],[121,29,120,20],[121,34,120,32],[122,6,121,4],[122,10,121,8,"soundRef"],[122,18,121,16],[122,19,121,17,"current"],[122,26,121,24],[122,28,121,26],[123,8,122,6],[123,14,122,12,"soundRef"],[123,22,122,20],[123,23,122,21,"current"],[123,30,122,28],[123,31,122,29,"stopAsync"],[123,40,122,38],[123,41,122,39],[123,42,122,40],[124,8,123,6],[124,14,123,12,"soundRef"],[124,22,123,20],[124,23,123,21,"current"],[124,30,123,28],[124,31,123,29,"unloadAsync"],[124,42,123,40],[124,43,123,41],[124,44,123,42],[125,8,124,6,"soundRef"],[125,16,124,14],[125,17,124,15,"current"],[125,24,124,22],[125,27,124,25],[125,31,124,29],[126,6,125,4],[127,6,126,4,"setIsPlaying"],[127,18,126,16],[127,19,126,17],[127,24,126,22],[127,25,126,23],[128,4,127,2],[128,5,127,3],[129,4,129,2],[129,11,129,9],[130,6,130,4,"isPlaying"],[130,15,130,13],[131,6,131,4,"isLoading"],[131,15,131,13],[132,6,132,4,"playAudio"],[132,15,132,13],[133,6,133,4,"stopAudio"],[134,4,134,2],[134,5,134,3],[135,2,135,0],[135,3,135,1],[136,0,135,2],[136,3]],"functionMap":{"names":["<global>","useAudioPlayer","playAudio","reader.onloadend","reader.onerror","playFromUri","onPlaybackStatusUpdate","stopAudio"],"mappings":"AAA;8BCQ;oBCM;yBCmC;ODa;uBEE;OFG;GDO;sBIE;GJ+B;iCKE;GLQ;oBME;GNO;CDQ"},"hasCjsExports":false},"type":"js/module"}]}