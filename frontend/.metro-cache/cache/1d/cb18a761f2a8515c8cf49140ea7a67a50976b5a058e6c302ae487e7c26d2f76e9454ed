{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"expo-av","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":32,"index":74}}],"key":"VxVG0TWBdB+Oc1qOQ32HKtN+H5M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useAudioPlayer\", {\n    enumerable: true,\n    get: function () {\n      return useAudioPlayer;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _expoAv = require(_dependencyMap[1], \"expo-av\");\n  const useAudioPlayer = () => {\n    _s();\n    const [isPlaying, setIsPlaying] = (0, _react.useState)(false);\n    const [isLoading, setIsLoading] = (0, _react.useState)(false);\n    const soundRef = (0, _react.useRef)(null);\n    const cacheRef = (0, _react.useRef)({});\n    const playAudio = async (messageId, text, lang, backendUrl) => {\n      try {\n        // Check cache first\n        if (cacheRef.current[messageId]) {\n          console.log('🔊 Playing from cache:', messageId);\n          await playFromUri(cacheRef.current[messageId]);\n          return;\n        }\n        setIsLoading(true);\n        console.log('🔊 Fetching audio from TTS...');\n\n        // Request TTS from backend (now using OpenAI)\n        const response = await fetch(`${backendUrl}/api/tts`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text,\n            lang,\n            provider: 'openai'\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`TTS failed: ${response.status}`);\n        }\n\n        // For web/mobile - use data URI directly\n        const blob = await response.blob();\n        const reader = new FileReader();\n        reader.onloadend = async () => {\n          const dataUri = reader.result;\n\n          // Cache the data URI\n          cacheRef.current[messageId] = dataUri;\n          console.log('✅ Audio cached as data URI');\n          await playFromUri(dataUri);\n        };\n        reader.readAsDataURL(blob);\n      } catch (error) {\n        console.error('❌ Audio playback error:', error);\n        setIsLoading(false);\n      }\n    };\n    const playFromUri = async uri => {\n      try {\n        // Stop any currently playing sound\n        if (soundRef.current) {\n          await soundRef.current.stopAsync();\n          await soundRef.current.unloadAsync();\n        }\n\n        // Set audio mode\n        await _expoAv.Audio.setAudioModeAsync({\n          allowsRecordingIOS: false,\n          playsInSilentModeIOS: true,\n          shouldDuckAndroid: true,\n          playThroughEarpieceAndroid: false\n        });\n        console.log('🔊 Loading sound:', uri);\n        const {\n          sound\n        } = await _expoAv.Audio.Sound.createAsync({\n          uri\n        }, {\n          shouldPlay: true\n        }, onPlaybackStatusUpdate);\n        soundRef.current = sound;\n        setIsLoading(false);\n        setIsPlaying(true);\n      } catch (error) {\n        console.error('❌ Failed to play audio:', error);\n        setIsLoading(false);\n        setIsPlaying(false);\n      }\n    };\n    const onPlaybackStatusUpdate = status => {\n      if (status.didJustFinish) {\n        console.log('✅ Audio finished playing');\n        setIsPlaying(false);\n        if (soundRef.current) {\n          soundRef.current.unloadAsync();\n        }\n      }\n    };\n    const stopAudio = async () => {\n      if (soundRef.current) {\n        await soundRef.current.stopAsync();\n        await soundRef.current.unloadAsync();\n        soundRef.current = null;\n      }\n      setIsPlaying(false);\n    };\n    return {\n      isPlaying,\n      isLoading,\n      playAudio,\n      stopAudio\n    };\n  };\n  _s(useAudioPlayer, \"crdKrPtVI1HOnOWWBSi9kosOb8o=\");\n});","lineCount":123,"map":[[8,2,9,0,"Object"],[8,8,9,0],[8,9,9,0,"defineProperty"],[8,23,9,0],[8,24,9,0,"exports"],[8,31,9,0],[9,4,9,0,"enumerable"],[9,14,9,0],[10,4,9,0,"get"],[10,7,9,0],[10,18,9,0,"get"],[10,19,9,0],[11,6,9,0],[11,13,9,0,"useAudioPlayer"],[11,27,9,0],[12,4,9,0],[13,2,9,0],[14,2,1,0],[14,6,1,0,"_react"],[14,12,1,0],[14,15,1,0,"require"],[14,22,1,0],[14,23,1,0,"_dependencyMap"],[14,37,1,0],[15,2,2,0],[15,6,2,0,"_expoAv"],[15,13,2,0],[15,16,2,0,"require"],[15,23,2,0],[15,24,2,0,"_dependencyMap"],[15,38,2,0],[16,2,9,7],[16,8,9,13,"useAudioPlayer"],[16,22,9,27],[16,25,9,30,"useAudioPlayer"],[16,26,9,30],[16,31,9,36],[17,4,9,36,"_s"],[17,6,9,36],[18,4,10,2],[18,10,10,8],[18,11,10,9,"isPlaying"],[18,20,10,18],[18,22,10,20,"setIsPlaying"],[18,34,10,32],[18,35,10,33],[18,38,10,36],[18,42,10,36,"useState"],[18,48,10,44],[18,49,10,44,"useState"],[18,57,10,44],[18,59,10,45],[18,64,10,50],[18,65,10,51],[19,4,11,2],[19,10,11,8],[19,11,11,9,"isLoading"],[19,20,11,18],[19,22,11,20,"setIsLoading"],[19,34,11,32],[19,35,11,33],[19,38,11,36],[19,42,11,36,"useState"],[19,48,11,44],[19,49,11,44,"useState"],[19,57,11,44],[19,59,11,45],[19,64,11,50],[19,65,11,51],[20,4,12,2],[20,10,12,8,"soundRef"],[20,18,12,16],[20,21,12,19],[20,25,12,19,"useRef"],[20,31,12,25],[20,32,12,25,"useRef"],[20,38,12,25],[20,40,12,46],[20,44,12,50],[20,45,12,51],[21,4,13,2],[21,10,13,8,"cacheRef"],[21,18,13,16],[21,21,13,19],[21,25,13,19,"useRef"],[21,31,13,25],[21,32,13,25,"useRef"],[21,38,13,25],[21,40,13,38],[21,41,13,39],[21,42,13,40],[21,43,13,41],[22,4,15,2],[22,10,15,8,"playAudio"],[22,19,15,17],[22,22,15,20],[22,28,15,20,"playAudio"],[22,29,15,27,"messageId"],[22,38,15,44],[22,40,15,46,"text"],[22,44,15,58],[22,46,15,60,"lang"],[22,50,15,72],[22,52,15,74,"backendUrl"],[22,62,15,92],[22,67,15,97],[23,6,16,4],[23,10,16,8],[24,8,17,6],[25,8,18,6],[25,12,18,10,"cacheRef"],[25,20,18,18],[25,21,18,19,"current"],[25,28,18,26],[25,29,18,27,"messageId"],[25,38,18,36],[25,39,18,37],[25,41,18,39],[26,10,19,8,"console"],[26,17,19,15],[26,18,19,16,"log"],[26,21,19,19],[26,22,19,20],[26,46,19,44],[26,48,19,46,"messageId"],[26,57,19,55],[26,58,19,56],[27,10,20,8],[27,16,20,14,"playFromUri"],[27,27,20,25],[27,28,20,26,"cacheRef"],[27,36,20,34],[27,37,20,35,"current"],[27,44,20,42],[27,45,20,43,"messageId"],[27,54,20,52],[27,55,20,53],[27,56,20,54],[28,10,21,8],[29,8,22,6],[30,8,24,6,"setIsLoading"],[30,20,24,18],[30,21,24,19],[30,25,24,23],[30,26,24,24],[31,8,25,6,"console"],[31,15,25,13],[31,16,25,14,"log"],[31,19,25,17],[31,20,25,18],[31,51,25,49],[31,52,25,50],[33,8,27,6],[34,8,28,6],[34,14,28,12,"response"],[34,22,28,20],[34,25,28,23],[34,31,28,29,"fetch"],[34,36,28,34],[34,37,28,35],[34,40,28,38,"backendUrl"],[34,50,28,48],[34,60,28,58],[34,62,28,60],[35,10,29,8,"method"],[35,16,29,14],[35,18,29,16],[35,24,29,22],[36,10,30,8,"headers"],[36,17,30,15],[36,19,30,17],[37,12,31,10],[37,26,31,24],[37,28,31,26],[38,10,32,8],[38,11,32,9],[39,10,33,8,"body"],[39,14,33,12],[39,16,33,14,"JSON"],[39,20,33,18],[39,21,33,19,"stringify"],[39,30,33,28],[39,31,33,29],[40,12,33,31,"text"],[40,16,33,35],[41,12,33,37,"lang"],[41,16,33,41],[42,12,33,43,"provider"],[42,20,33,51],[42,22,33,53],[43,10,33,62],[43,11,33,63],[44,8,34,6],[44,9,34,7],[44,10,34,8],[45,8,36,6],[45,12,36,10],[45,13,36,11,"response"],[45,21,36,19],[45,22,36,20,"ok"],[45,24,36,22],[45,26,36,24],[46,10,37,8],[46,16,37,14],[46,20,37,18,"Error"],[46,25,37,23],[46,26,37,24],[46,41,37,39,"response"],[46,49,37,47],[46,50,37,48,"status"],[46,56,37,54],[46,58,37,56],[46,59,37,57],[47,8,38,6],[49,8,40,6],[50,8,41,6],[50,14,41,12,"blob"],[50,18,41,16],[50,21,41,19],[50,27,41,25,"response"],[50,35,41,33],[50,36,41,34,"blob"],[50,40,41,38],[50,41,41,39],[50,42,41,40],[51,8,42,6],[51,14,42,12,"reader"],[51,20,42,18],[51,23,42,21],[51,27,42,25,"FileReader"],[51,37,42,35],[51,38,42,36],[51,39,42,37],[52,8,44,6,"reader"],[52,14,44,12],[52,15,44,13,"onloadend"],[52,24,44,22],[52,27,44,25],[52,39,44,37],[53,10,45,8],[53,16,45,14,"dataUri"],[53,23,45,21],[53,26,45,24,"reader"],[53,32,45,30],[53,33,45,31,"result"],[53,39,45,47],[55,10,47,8],[56,10,48,8,"cacheRef"],[56,18,48,16],[56,19,48,17,"current"],[56,26,48,24],[56,27,48,25,"messageId"],[56,36,48,34],[56,37,48,35],[56,40,48,38,"dataUri"],[56,47,48,45],[57,10,50,8,"console"],[57,17,50,15],[57,18,50,16,"log"],[57,21,50,19],[57,22,50,20],[57,50,50,48],[57,51,50,49],[58,10,51,8],[58,16,51,14,"playFromUri"],[58,27,51,25],[58,28,51,26,"dataUri"],[58,35,51,33],[58,36,51,34],[59,8,52,6],[59,9,52,7],[60,8,54,6,"reader"],[60,14,54,12],[60,15,54,13,"readAsDataURL"],[60,28,54,26],[60,29,54,27,"blob"],[60,33,54,31],[60,34,54,32],[61,6,55,4],[61,7,55,5],[61,8,55,6],[61,15,55,13,"error"],[61,20,55,18],[61,22,55,20],[62,8,56,6,"console"],[62,15,56,13],[62,16,56,14,"error"],[62,21,56,19],[62,22,56,20],[62,47,56,45],[62,49,56,47,"error"],[62,54,56,52],[62,55,56,53],[63,8,57,6,"setIsLoading"],[63,20,57,18],[63,21,57,19],[63,26,57,24],[63,27,57,25],[64,6,58,4],[65,4,59,2],[65,5,59,3],[66,4,61,2],[66,10,61,8,"playFromUri"],[66,21,61,19],[66,24,61,22],[66,30,61,29,"uri"],[66,33,61,40],[66,37,61,45],[67,6,62,4],[67,10,62,8],[68,8,63,6],[69,8,64,6],[69,12,64,10,"soundRef"],[69,20,64,18],[69,21,64,19,"current"],[69,28,64,26],[69,30,64,28],[70,10,65,8],[70,16,65,14,"soundRef"],[70,24,65,22],[70,25,65,23,"current"],[70,32,65,30],[70,33,65,31,"stopAsync"],[70,42,65,40],[70,43,65,41],[70,44,65,42],[71,10,66,8],[71,16,66,14,"soundRef"],[71,24,66,22],[71,25,66,23,"current"],[71,32,66,30],[71,33,66,31,"unloadAsync"],[71,44,66,42],[71,45,66,43],[71,46,66,44],[72,8,67,6],[74,8,69,6],[75,8,70,6],[75,14,70,12,"Audio"],[75,21,70,17],[75,22,70,17,"Audio"],[75,27,70,17],[75,28,70,18,"setAudioModeAsync"],[75,45,70,35],[75,46,70,36],[76,10,71,8,"allowsRecordingIOS"],[76,28,71,26],[76,30,71,28],[76,35,71,33],[77,10,72,8,"playsInSilentModeIOS"],[77,30,72,28],[77,32,72,30],[77,36,72,34],[78,10,73,8,"shouldDuckAndroid"],[78,27,73,25],[78,29,73,27],[78,33,73,31],[79,10,74,8,"playThroughEarpieceAndroid"],[79,36,74,34],[79,38,74,36],[80,8,75,6],[80,9,75,7],[80,10,75,8],[81,8,77,6,"console"],[81,15,77,13],[81,16,77,14,"log"],[81,19,77,17],[81,20,77,18],[81,39,77,37],[81,41,77,39,"uri"],[81,44,77,42],[81,45,77,43],[82,8,78,6],[82,14,78,12],[83,10,78,14,"sound"],[84,8,78,20],[84,9,78,21],[84,12,78,24],[84,18,78,30,"Audio"],[84,25,78,35],[84,26,78,35,"Audio"],[84,31,78,35],[84,32,78,36,"Sound"],[84,37,78,41],[84,38,78,42,"createAsync"],[84,49,78,53],[84,50,79,8],[85,10,79,10,"uri"],[86,8,79,14],[86,9,79,15],[86,11,80,8],[87,10,80,10,"shouldPlay"],[87,20,80,20],[87,22,80,22],[88,8,80,27],[88,9,80,28],[88,11,81,8,"onPlaybackStatusUpdate"],[88,33,82,6],[88,34,82,7],[89,8,84,6,"soundRef"],[89,16,84,14],[89,17,84,15,"current"],[89,24,84,22],[89,27,84,25,"sound"],[89,32,84,30],[90,8,85,6,"setIsLoading"],[90,20,85,18],[90,21,85,19],[90,26,85,24],[90,27,85,25],[91,8,86,6,"setIsPlaying"],[91,20,86,18],[91,21,86,19],[91,25,86,23],[91,26,86,24],[92,6,87,4],[92,7,87,5],[92,8,87,6],[92,15,87,13,"error"],[92,20,87,18],[92,22,87,20],[93,8,88,6,"console"],[93,15,88,13],[93,16,88,14,"error"],[93,21,88,19],[93,22,88,20],[93,47,88,45],[93,49,88,47,"error"],[93,54,88,52],[93,55,88,53],[94,8,89,6,"setIsLoading"],[94,20,89,18],[94,21,89,19],[94,26,89,24],[94,27,89,25],[95,8,90,6,"setIsPlaying"],[95,20,90,18],[95,21,90,19],[95,26,90,24],[95,27,90,25],[96,6,91,4],[97,4,92,2],[97,5,92,3],[98,4,94,2],[98,10,94,8,"onPlaybackStatusUpdate"],[98,32,94,30],[98,35,94,34,"status"],[98,41,94,45],[98,45,94,50],[99,6,95,4],[99,10,95,8,"status"],[99,16,95,14],[99,17,95,15,"didJustFinish"],[99,30,95,28],[99,32,95,30],[100,8,96,6,"console"],[100,15,96,13],[100,16,96,14,"log"],[100,19,96,17],[100,20,96,18],[100,46,96,44],[100,47,96,45],[101,8,97,6,"setIsPlaying"],[101,20,97,18],[101,21,97,19],[101,26,97,24],[101,27,97,25],[102,8,98,6],[102,12,98,10,"soundRef"],[102,20,98,18],[102,21,98,19,"current"],[102,28,98,26],[102,30,98,28],[103,10,99,8,"soundRef"],[103,18,99,16],[103,19,99,17,"current"],[103,26,99,24],[103,27,99,25,"unloadAsync"],[103,38,99,36],[103,39,99,37],[103,40,99,38],[104,8,100,6],[105,6,101,4],[106,4,102,2],[106,5,102,3],[107,4,104,2],[107,10,104,8,"stopAudio"],[107,19,104,17],[107,22,104,20],[107,28,104,20,"stopAudio"],[107,29,104,20],[107,34,104,32],[108,6,105,4],[108,10,105,8,"soundRef"],[108,18,105,16],[108,19,105,17,"current"],[108,26,105,24],[108,28,105,26],[109,8,106,6],[109,14,106,12,"soundRef"],[109,22,106,20],[109,23,106,21,"current"],[109,30,106,28],[109,31,106,29,"stopAsync"],[109,40,106,38],[109,41,106,39],[109,42,106,40],[110,8,107,6],[110,14,107,12,"soundRef"],[110,22,107,20],[110,23,107,21,"current"],[110,30,107,28],[110,31,107,29,"unloadAsync"],[110,42,107,40],[110,43,107,41],[110,44,107,42],[111,8,108,6,"soundRef"],[111,16,108,14],[111,17,108,15,"current"],[111,24,108,22],[111,27,108,25],[111,31,108,29],[112,6,109,4],[113,6,110,4,"setIsPlaying"],[113,18,110,16],[113,19,110,17],[113,24,110,22],[113,25,110,23],[114,4,111,2],[114,5,111,3],[115,4,113,2],[115,11,113,9],[116,6,114,4,"isPlaying"],[116,15,114,13],[117,6,115,4,"isLoading"],[117,15,115,13],[118,6,116,4,"playAudio"],[118,15,116,13],[119,6,117,4,"stopAudio"],[120,4,118,2],[120,5,118,3],[121,2,119,0],[121,3,119,1],[122,2,119,2,"_s"],[122,4,119,2],[122,5,9,13,"useAudioPlayer"],[122,19,9,27],[123,0,9,27],[123,3]],"functionMap":{"names":["<global>","useAudioPlayer","playAudio","reader.onloadend","playFromUri","onPlaybackStatusUpdate","stopAudio"],"mappings":"AAA;8BCQ;oBCM;yBC6B;ODQ;GDO;sBGE;GH+B;iCIE;GJQ;oBKE;GLO;CDQ"},"hasCjsExports":false},"type":"js/module"}]}