{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"expo-av","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":32,"index":74}}],"key":"VxVG0TWBdB+Oc1qOQ32HKtN+H5M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useAudioPlayer\", {\n    enumerable: true,\n    get: function () {\n      return useAudioPlayer;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _expoAv = require(_dependencyMap[1], \"expo-av\");\n  const useAudioPlayer = () => {\n    _s();\n    const [isPlaying, setIsPlaying] = (0, _react.useState)(false);\n    const [isLoading, setIsLoading] = (0, _react.useState)(false);\n    const soundRef = (0, _react.useRef)(null);\n    const cacheRef = (0, _react.useRef)({});\n    const playAudio = async (messageId, text, lang, backendUrl) => {\n      try {\n        // Check cache first\n        if (cacheRef.current[messageId]) {\n          console.log('🔊 Playing from cache:', messageId);\n          await playFromUri(cacheRef.current[messageId]);\n          return;\n        }\n        setIsLoading(true);\n        console.log('🔊 Fetching audio from TTS...', {\n          messageId,\n          text: text.substring(0, 50)\n        });\n\n        // Request TTS from backend (now using OpenAI)\n        const response = await fetch(`${backendUrl}/api/tts`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text,\n            lang,\n            provider: 'openai'\n          })\n        });\n        console.log('📥 TTS Response status:', response.status);\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error('❌ TTS Error:', errorText);\n          throw new Error(`TTS failed: ${response.status} - ${errorText}`);\n        }\n\n        // For web/mobile - use data URI directly\n        const blob = await response.blob();\n        console.log('📦 Blob received:', blob.size, 'bytes');\n        const reader = new FileReader();\n        reader.onloadend = async () => {\n          try {\n            const dataUri = reader.result;\n\n            // Cache the data URI\n            cacheRef.current[messageId] = dataUri;\n            console.log('✅ Audio cached as data URI, playing now...');\n            await playFromUri(dataUri);\n          } catch (playError) {\n            console.error('❌ Play error:', playError);\n            setIsLoading(false);\n          }\n        };\n        reader.onerror = () => {\n          console.error('❌ FileReader error');\n          setIsLoading(false);\n        };\n        reader.readAsDataURL(blob);\n      } catch (error) {\n        console.error('❌ Audio playback error:', error);\n        setIsLoading(false);\n      }\n    };\n    const playFromUri = async uri => {\n      try {\n        // Stop any currently playing sound\n        if (soundRef.current) {\n          await soundRef.current.stopAsync();\n          await soundRef.current.unloadAsync();\n        }\n\n        // Set audio mode\n        await _expoAv.Audio.setAudioModeAsync({\n          allowsRecordingIOS: false,\n          playsInSilentModeIOS: true,\n          shouldDuckAndroid: true,\n          playThroughEarpieceAndroid: false\n        });\n        console.log('🔊 Loading sound:', uri);\n        const {\n          sound\n        } = await _expoAv.Audio.Sound.createAsync({\n          uri\n        }, {\n          shouldPlay: true\n        }, onPlaybackStatusUpdate);\n        soundRef.current = sound;\n        setIsLoading(false);\n        setIsPlaying(true);\n      } catch (error) {\n        console.error('❌ Failed to play audio:', error);\n        setIsLoading(false);\n        setIsPlaying(false);\n      }\n    };\n    const onPlaybackStatusUpdate = status => {\n      if (status.didJustFinish) {\n        console.log('✅ Audio finished playing');\n        setIsPlaying(false);\n        if (soundRef.current) {\n          soundRef.current.unloadAsync();\n        }\n      }\n    };\n    const stopAudio = async () => {\n      if (soundRef.current) {\n        await soundRef.current.stopAsync();\n        await soundRef.current.unloadAsync();\n        soundRef.current = null;\n      }\n      setIsPlaying(false);\n    };\n    return {\n      isPlaying,\n      isLoading,\n      playAudio,\n      stopAudio\n    };\n  };\n  _s(useAudioPlayer, \"crdKrPtVI1HOnOWWBSi9kosOb8o=\");\n});","lineCount":139,"map":[[8,2,9,0,"Object"],[8,8,9,0],[8,9,9,0,"defineProperty"],[8,23,9,0],[8,24,9,0,"exports"],[8,31,9,0],[9,4,9,0,"enumerable"],[9,14,9,0],[10,4,9,0,"get"],[10,7,9,0],[10,18,9,0,"get"],[10,19,9,0],[11,6,9,0],[11,13,9,0,"useAudioPlayer"],[11,27,9,0],[12,4,9,0],[13,2,9,0],[14,2,1,0],[14,6,1,0,"_react"],[14,12,1,0],[14,15,1,0,"require"],[14,22,1,0],[14,23,1,0,"_dependencyMap"],[14,37,1,0],[15,2,2,0],[15,6,2,0,"_expoAv"],[15,13,2,0],[15,16,2,0,"require"],[15,23,2,0],[15,24,2,0,"_dependencyMap"],[15,38,2,0],[16,2,9,7],[16,8,9,13,"useAudioPlayer"],[16,22,9,27],[16,25,9,30,"useAudioPlayer"],[16,26,9,30],[16,31,9,36],[17,4,9,36,"_s"],[17,6,9,36],[18,4,10,2],[18,10,10,8],[18,11,10,9,"isPlaying"],[18,20,10,18],[18,22,10,20,"setIsPlaying"],[18,34,10,32],[18,35,10,33],[18,38,10,36],[18,42,10,36,"useState"],[18,48,10,44],[18,49,10,44,"useState"],[18,57,10,44],[18,59,10,45],[18,64,10,50],[18,65,10,51],[19,4,11,2],[19,10,11,8],[19,11,11,9,"isLoading"],[19,20,11,18],[19,22,11,20,"setIsLoading"],[19,34,11,32],[19,35,11,33],[19,38,11,36],[19,42,11,36,"useState"],[19,48,11,44],[19,49,11,44,"useState"],[19,57,11,44],[19,59,11,45],[19,64,11,50],[19,65,11,51],[20,4,12,2],[20,10,12,8,"soundRef"],[20,18,12,16],[20,21,12,19],[20,25,12,19,"useRef"],[20,31,12,25],[20,32,12,25,"useRef"],[20,38,12,25],[20,40,12,46],[20,44,12,50],[20,45,12,51],[21,4,13,2],[21,10,13,8,"cacheRef"],[21,18,13,16],[21,21,13,19],[21,25,13,19,"useRef"],[21,31,13,25],[21,32,13,25,"useRef"],[21,38,13,25],[21,40,13,38],[21,41,13,39],[21,42,13,40],[21,43,13,41],[22,4,15,2],[22,10,15,8,"playAudio"],[22,19,15,17],[22,22,15,20],[22,28,15,20,"playAudio"],[22,29,15,27,"messageId"],[22,38,15,44],[22,40,15,46,"text"],[22,44,15,58],[22,46,15,60,"lang"],[22,50,15,72],[22,52,15,74,"backendUrl"],[22,62,15,92],[22,67,15,97],[23,6,16,4],[23,10,16,8],[24,8,17,6],[25,8,18,6],[25,12,18,10,"cacheRef"],[25,20,18,18],[25,21,18,19,"current"],[25,28,18,26],[25,29,18,27,"messageId"],[25,38,18,36],[25,39,18,37],[25,41,18,39],[26,10,19,8,"console"],[26,17,19,15],[26,18,19,16,"log"],[26,21,19,19],[26,22,19,20],[26,46,19,44],[26,48,19,46,"messageId"],[26,57,19,55],[26,58,19,56],[27,10,20,8],[27,16,20,14,"playFromUri"],[27,27,20,25],[27,28,20,26,"cacheRef"],[27,36,20,34],[27,37,20,35,"current"],[27,44,20,42],[27,45,20,43,"messageId"],[27,54,20,52],[27,55,20,53],[27,56,20,54],[28,10,21,8],[29,8,22,6],[30,8,24,6,"setIsLoading"],[30,20,24,18],[30,21,24,19],[30,25,24,23],[30,26,24,24],[31,8,25,6,"console"],[31,15,25,13],[31,16,25,14,"log"],[31,19,25,17],[31,20,25,18],[31,51,25,49],[31,53,25,51],[32,10,25,53,"messageId"],[32,19,25,62],[33,10,25,64,"text"],[33,14,25,68],[33,16,25,70,"text"],[33,20,25,74],[33,21,25,75,"substring"],[33,30,25,84],[33,31,25,85],[33,32,25,86],[33,34,25,88],[33,36,25,90],[34,8,25,92],[34,9,25,93],[34,10,25,94],[36,8,27,6],[37,8,28,6],[37,14,28,12,"response"],[37,22,28,20],[37,25,28,23],[37,31,28,29,"fetch"],[37,36,28,34],[37,37,28,35],[37,40,28,38,"backendUrl"],[37,50,28,48],[37,60,28,58],[37,62,28,60],[38,10,29,8,"method"],[38,16,29,14],[38,18,29,16],[38,24,29,22],[39,10,30,8,"headers"],[39,17,30,15],[39,19,30,17],[40,12,31,10],[40,26,31,24],[40,28,31,26],[41,10,32,8],[41,11,32,9],[42,10,33,8,"body"],[42,14,33,12],[42,16,33,14,"JSON"],[42,20,33,18],[42,21,33,19,"stringify"],[42,30,33,28],[42,31,33,29],[43,12,33,31,"text"],[43,16,33,35],[44,12,33,37,"lang"],[44,16,33,41],[45,12,33,43,"provider"],[45,20,33,51],[45,22,33,53],[46,10,33,62],[46,11,33,63],[47,8,34,6],[47,9,34,7],[47,10,34,8],[48,8,36,6,"console"],[48,15,36,13],[48,16,36,14,"log"],[48,19,36,17],[48,20,36,18],[48,45,36,43],[48,47,36,45,"response"],[48,55,36,53],[48,56,36,54,"status"],[48,62,36,60],[48,63,36,61],[49,8,38,6],[49,12,38,10],[49,13,38,11,"response"],[49,21,38,19],[49,22,38,20,"ok"],[49,24,38,22],[49,26,38,24],[50,10,39,8],[50,16,39,14,"errorText"],[50,25,39,23],[50,28,39,26],[50,34,39,32,"response"],[50,42,39,40],[50,43,39,41,"text"],[50,47,39,45],[50,48,39,46],[50,49,39,47],[51,10,40,8,"console"],[51,17,40,15],[51,18,40,16,"error"],[51,23,40,21],[51,24,40,22],[51,38,40,36],[51,40,40,38,"errorText"],[51,49,40,47],[51,50,40,48],[52,10,41,8],[52,16,41,14],[52,20,41,18,"Error"],[52,25,41,23],[52,26,41,24],[52,41,41,39,"response"],[52,49,41,47],[52,50,41,48,"status"],[52,56,41,54],[52,62,41,60,"errorText"],[52,71,41,69],[52,73,41,71],[52,74,41,72],[53,8,42,6],[55,8,44,6],[56,8,45,6],[56,14,45,12,"blob"],[56,18,45,16],[56,21,45,19],[56,27,45,25,"response"],[56,35,45,33],[56,36,45,34,"blob"],[56,40,45,38],[56,41,45,39],[56,42,45,40],[57,8,46,6,"console"],[57,15,46,13],[57,16,46,14,"log"],[57,19,46,17],[57,20,46,18],[57,39,46,37],[57,41,46,39,"blob"],[57,45,46,43],[57,46,46,44,"size"],[57,50,46,48],[57,52,46,50],[57,59,46,57],[57,60,46,58],[58,8,48,6],[58,14,48,12,"reader"],[58,20,48,18],[58,23,48,21],[58,27,48,25,"FileReader"],[58,37,48,35],[58,38,48,36],[58,39,48,37],[59,8,50,6,"reader"],[59,14,50,12],[59,15,50,13,"onloadend"],[59,24,50,22],[59,27,50,25],[59,39,50,37],[60,10,51,8],[60,14,51,12],[61,12,52,10],[61,18,52,16,"dataUri"],[61,25,52,23],[61,28,52,26,"reader"],[61,34,52,32],[61,35,52,33,"result"],[61,41,52,49],[63,12,54,10],[64,12,55,10,"cacheRef"],[64,20,55,18],[64,21,55,19,"current"],[64,28,55,26],[64,29,55,27,"messageId"],[64,38,55,36],[64,39,55,37],[64,42,55,40,"dataUri"],[64,49,55,47],[65,12,57,10,"console"],[65,19,57,17],[65,20,57,18,"log"],[65,23,57,21],[65,24,57,22],[65,68,57,66],[65,69,57,67],[66,12,58,10],[66,18,58,16,"playFromUri"],[66,29,58,27],[66,30,58,28,"dataUri"],[66,37,58,35],[66,38,58,36],[67,10,59,8],[67,11,59,9],[67,12,59,10],[67,19,59,17,"playError"],[67,28,59,26],[67,30,59,28],[68,12,60,10,"console"],[68,19,60,17],[68,20,60,18,"error"],[68,25,60,23],[68,26,60,24],[68,41,60,39],[68,43,60,41,"playError"],[68,52,60,50],[68,53,60,51],[69,12,61,10,"setIsLoading"],[69,24,61,22],[69,25,61,23],[69,30,61,28],[69,31,61,29],[70,10,62,8],[71,8,63,6],[71,9,63,7],[72,8,65,6,"reader"],[72,14,65,12],[72,15,65,13,"onerror"],[72,22,65,20],[72,25,65,23],[72,31,65,29],[73,10,66,8,"console"],[73,17,66,15],[73,18,66,16,"error"],[73,23,66,21],[73,24,66,22],[73,44,66,42],[73,45,66,43],[74,10,67,8,"setIsLoading"],[74,22,67,20],[74,23,67,21],[74,28,67,26],[74,29,67,27],[75,8,68,6],[75,9,68,7],[76,8,70,6,"reader"],[76,14,70,12],[76,15,70,13,"readAsDataURL"],[76,28,70,26],[76,29,70,27,"blob"],[76,33,70,31],[76,34,70,32],[77,6,71,4],[77,7,71,5],[77,8,71,6],[77,15,71,13,"error"],[77,20,71,18],[77,22,71,20],[78,8,72,6,"console"],[78,15,72,13],[78,16,72,14,"error"],[78,21,72,19],[78,22,72,20],[78,47,72,45],[78,49,72,47,"error"],[78,54,72,52],[78,55,72,53],[79,8,73,6,"setIsLoading"],[79,20,73,18],[79,21,73,19],[79,26,73,24],[79,27,73,25],[80,6,74,4],[81,4,75,2],[81,5,75,3],[82,4,77,2],[82,10,77,8,"playFromUri"],[82,21,77,19],[82,24,77,22],[82,30,77,29,"uri"],[82,33,77,40],[82,37,77,45],[83,6,78,4],[83,10,78,8],[84,8,79,6],[85,8,80,6],[85,12,80,10,"soundRef"],[85,20,80,18],[85,21,80,19,"current"],[85,28,80,26],[85,30,80,28],[86,10,81,8],[86,16,81,14,"soundRef"],[86,24,81,22],[86,25,81,23,"current"],[86,32,81,30],[86,33,81,31,"stopAsync"],[86,42,81,40],[86,43,81,41],[86,44,81,42],[87,10,82,8],[87,16,82,14,"soundRef"],[87,24,82,22],[87,25,82,23,"current"],[87,32,82,30],[87,33,82,31,"unloadAsync"],[87,44,82,42],[87,45,82,43],[87,46,82,44],[88,8,83,6],[90,8,85,6],[91,8,86,6],[91,14,86,12,"Audio"],[91,21,86,17],[91,22,86,17,"Audio"],[91,27,86,17],[91,28,86,18,"setAudioModeAsync"],[91,45,86,35],[91,46,86,36],[92,10,87,8,"allowsRecordingIOS"],[92,28,87,26],[92,30,87,28],[92,35,87,33],[93,10,88,8,"playsInSilentModeIOS"],[93,30,88,28],[93,32,88,30],[93,36,88,34],[94,10,89,8,"shouldDuckAndroid"],[94,27,89,25],[94,29,89,27],[94,33,89,31],[95,10,90,8,"playThroughEarpieceAndroid"],[95,36,90,34],[95,38,90,36],[96,8,91,6],[96,9,91,7],[96,10,91,8],[97,8,93,6,"console"],[97,15,93,13],[97,16,93,14,"log"],[97,19,93,17],[97,20,93,18],[97,39,93,37],[97,41,93,39,"uri"],[97,44,93,42],[97,45,93,43],[98,8,94,6],[98,14,94,12],[99,10,94,14,"sound"],[100,8,94,20],[100,9,94,21],[100,12,94,24],[100,18,94,30,"Audio"],[100,25,94,35],[100,26,94,35,"Audio"],[100,31,94,35],[100,32,94,36,"Sound"],[100,37,94,41],[100,38,94,42,"createAsync"],[100,49,94,53],[100,50,95,8],[101,10,95,10,"uri"],[102,8,95,14],[102,9,95,15],[102,11,96,8],[103,10,96,10,"shouldPlay"],[103,20,96,20],[103,22,96,22],[104,8,96,27],[104,9,96,28],[104,11,97,8,"onPlaybackStatusUpdate"],[104,33,98,6],[104,34,98,7],[105,8,100,6,"soundRef"],[105,16,100,14],[105,17,100,15,"current"],[105,24,100,22],[105,27,100,25,"sound"],[105,32,100,30],[106,8,101,6,"setIsLoading"],[106,20,101,18],[106,21,101,19],[106,26,101,24],[106,27,101,25],[107,8,102,6,"setIsPlaying"],[107,20,102,18],[107,21,102,19],[107,25,102,23],[107,26,102,24],[108,6,103,4],[108,7,103,5],[108,8,103,6],[108,15,103,13,"error"],[108,20,103,18],[108,22,103,20],[109,8,104,6,"console"],[109,15,104,13],[109,16,104,14,"error"],[109,21,104,19],[109,22,104,20],[109,47,104,45],[109,49,104,47,"error"],[109,54,104,52],[109,55,104,53],[110,8,105,6,"setIsLoading"],[110,20,105,18],[110,21,105,19],[110,26,105,24],[110,27,105,25],[111,8,106,6,"setIsPlaying"],[111,20,106,18],[111,21,106,19],[111,26,106,24],[111,27,106,25],[112,6,107,4],[113,4,108,2],[113,5,108,3],[114,4,110,2],[114,10,110,8,"onPlaybackStatusUpdate"],[114,32,110,30],[114,35,110,34,"status"],[114,41,110,45],[114,45,110,50],[115,6,111,4],[115,10,111,8,"status"],[115,16,111,14],[115,17,111,15,"didJustFinish"],[115,30,111,28],[115,32,111,30],[116,8,112,6,"console"],[116,15,112,13],[116,16,112,14,"log"],[116,19,112,17],[116,20,112,18],[116,46,112,44],[116,47,112,45],[117,8,113,6,"setIsPlaying"],[117,20,113,18],[117,21,113,19],[117,26,113,24],[117,27,113,25],[118,8,114,6],[118,12,114,10,"soundRef"],[118,20,114,18],[118,21,114,19,"current"],[118,28,114,26],[118,30,114,28],[119,10,115,8,"soundRef"],[119,18,115,16],[119,19,115,17,"current"],[119,26,115,24],[119,27,115,25,"unloadAsync"],[119,38,115,36],[119,39,115,37],[119,40,115,38],[120,8,116,6],[121,6,117,4],[122,4,118,2],[122,5,118,3],[123,4,120,2],[123,10,120,8,"stopAudio"],[123,19,120,17],[123,22,120,20],[123,28,120,20,"stopAudio"],[123,29,120,20],[123,34,120,32],[124,6,121,4],[124,10,121,8,"soundRef"],[124,18,121,16],[124,19,121,17,"current"],[124,26,121,24],[124,28,121,26],[125,8,122,6],[125,14,122,12,"soundRef"],[125,22,122,20],[125,23,122,21,"current"],[125,30,122,28],[125,31,122,29,"stopAsync"],[125,40,122,38],[125,41,122,39],[125,42,122,40],[126,8,123,6],[126,14,123,12,"soundRef"],[126,22,123,20],[126,23,123,21,"current"],[126,30,123,28],[126,31,123,29,"unloadAsync"],[126,42,123,40],[126,43,123,41],[126,44,123,42],[127,8,124,6,"soundRef"],[127,16,124,14],[127,17,124,15,"current"],[127,24,124,22],[127,27,124,25],[127,31,124,29],[128,6,125,4],[129,6,126,4,"setIsPlaying"],[129,18,126,16],[129,19,126,17],[129,24,126,22],[129,25,126,23],[130,4,127,2],[130,5,127,3],[131,4,129,2],[131,11,129,9],[132,6,130,4,"isPlaying"],[132,15,130,13],[133,6,131,4,"isLoading"],[133,15,131,13],[134,6,132,4,"playAudio"],[134,15,132,13],[135,6,133,4,"stopAudio"],[136,4,134,2],[136,5,134,3],[137,2,135,0],[137,3,135,1],[138,2,135,2,"_s"],[138,4,135,2],[138,5,9,13,"useAudioPlayer"],[138,19,9,27],[139,0,9,27],[139,3]],"functionMap":{"names":["<global>","useAudioPlayer","playAudio","reader.onloadend","reader.onerror","playFromUri","onPlaybackStatusUpdate","stopAudio"],"mappings":"AAA;8BCQ;oBCM;yBCmC;ODa;uBEE;OFG;GDO;sBIE;GJ+B;iCKE;GLQ;oBME;GNO;CDQ"},"hasCjsExports":false},"type":"js/module"}]}