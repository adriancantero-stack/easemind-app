{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"expo-av","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":32,"index":74}}],"key":"VxVG0TWBdB+Oc1qOQ32HKtN+H5M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useAudioPlayer\", {\n    enumerable: true,\n    get: function () {\n      return useAudioPlayer;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _expoAv = require(_dependencyMap[1], \"expo-av\");\n  const useAudioPlayer = () => {\n    _s();\n    const [isPlaying, setIsPlaying] = (0, _react.useState)(false);\n    const [isLoading, setIsLoading] = (0, _react.useState)(false);\n    const soundRef = (0, _react.useRef)(null);\n    const cacheRef = (0, _react.useRef)({});\n    const playAudio = async (messageId, text, lang, backendUrl) => {\n      try {\n        // Check cache first\n        if (cacheRef.current[messageId]) {\n          console.log('🔊 Playing from cache:', messageId);\n          await playFromUri(cacheRef.current[messageId]);\n          return;\n        }\n        setIsLoading(true);\n        console.log('🔊 Fetching audio from TTS...', {\n          messageId,\n          text: text.substring(0, 50)\n        });\n\n        // Request TTS from backend (now using OpenAI)\n        const response = await fetch(`${backendUrl}/api/tts`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text,\n            lang,\n            provider: 'openai'\n          })\n        });\n        console.log('📥 TTS Response status:', response.status);\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error('❌ TTS Error:', errorText);\n          throw new Error(`TTS failed: ${response.status} - ${errorText}`);\n        }\n\n        // For web/mobile - use data URI directly\n        const blob = await response.blob();\n        console.log('📦 Blob received:', blob.size, 'bytes');\n        const reader = new FileReader();\n        reader.onloadend = async () => {\n          try {\n            const dataUri = reader.result;\n\n            // Cache the data URI\n            cacheRef.current[messageId] = dataUri;\n            console.log('✅ Audio cached as data URI, playing now...');\n            await playFromUri(dataUri);\n          } catch (playError) {\n            console.error('❌ Play error:', playError);\n            setIsLoading(false);\n          }\n        };\n        reader.onerror = () => {\n          console.error('❌ FileReader error');\n          setIsLoading(false);\n        };\n        reader.readAsDataURL(blob);\n      } catch (error) {\n        console.error('❌ Audio playback error:', error);\n        setIsLoading(false);\n      }\n    };\n    const playFromUri = async uri => {\n      try {\n        console.log('🔊 playFromUri called with uri length:', uri.length);\n\n        // Stop and cleanup any currently playing sound\n        if (soundRef.current) {\n          console.log('🛑 Stopping previous sound...');\n          try {\n            await soundRef.current.stopAsync();\n            await soundRef.current.unloadAsync();\n          } catch (e) {\n            console.log('⚠️ Error stopping previous sound:', e);\n          }\n          soundRef.current = null;\n        }\n\n        // Set audio mode\n        await _expoAv.Audio.setAudioModeAsync({\n          allowsRecordingIOS: false,\n          playsInSilentModeIOS: true,\n          shouldDuckAndroid: true,\n          playThroughEarpieceAndroid: false,\n          staysActiveInBackground: false\n        });\n        console.log('🔊 Creating new sound from data URI...');\n\n        // Create sound without autoplay first\n        const {\n          sound\n        } = await _expoAv.Audio.Sound.createAsync({\n          uri\n        }, {\n          shouldPlay: false\n        },\n        // Don't autoplay yet\n        onPlaybackStatusUpdate);\n        soundRef.current = sound;\n        console.log('✅ Sound created successfully');\n\n        // Check if sound is loaded\n        const status = await sound.getStatusAsync();\n        console.log('📊 Sound status:', status);\n        if (status.isLoaded) {\n          console.log('▶️ Playing sound now...');\n          await sound.playAsync();\n          setIsPlaying(true);\n          console.log('✅ Sound playing!');\n        } else {\n          throw new Error('Sound failed to load');\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error('❌ Failed to play audio:', error);\n        if (error instanceof Error) {\n          console.error('❌ Error details:', error.message, error.stack);\n        }\n        setIsLoading(false);\n        setIsPlaying(false);\n      }\n    };\n    const onPlaybackStatusUpdate = status => {\n      if (status.didJustFinish) {\n        console.log('✅ Audio finished playing');\n        setIsPlaying(false);\n        if (soundRef.current) {\n          soundRef.current.unloadAsync();\n        }\n      }\n    };\n    const stopAudio = async () => {\n      if (soundRef.current) {\n        await soundRef.current.stopAsync();\n        await soundRef.current.unloadAsync();\n        soundRef.current = null;\n      }\n      setIsPlaying(false);\n    };\n    return {\n      isPlaying,\n      isLoading,\n      playAudio,\n      stopAudio\n    };\n  };\n  _s(useAudioPlayer, \"crdKrPtVI1HOnOWWBSi9kosOb8o=\");\n});","lineCount":167,"map":[[8,2,9,0,"Object"],[8,8,9,0],[8,9,9,0,"defineProperty"],[8,23,9,0],[8,24,9,0,"exports"],[8,31,9,0],[9,4,9,0,"enumerable"],[9,14,9,0],[10,4,9,0,"get"],[10,7,9,0],[10,18,9,0,"get"],[10,19,9,0],[11,6,9,0],[11,13,9,0,"useAudioPlayer"],[11,27,9,0],[12,4,9,0],[13,2,9,0],[14,2,1,0],[14,6,1,0,"_react"],[14,12,1,0],[14,15,1,0,"require"],[14,22,1,0],[14,23,1,0,"_dependencyMap"],[14,37,1,0],[15,2,2,0],[15,6,2,0,"_expoAv"],[15,13,2,0],[15,16,2,0,"require"],[15,23,2,0],[15,24,2,0,"_dependencyMap"],[15,38,2,0],[16,2,9,7],[16,8,9,13,"useAudioPlayer"],[16,22,9,27],[16,25,9,30,"useAudioPlayer"],[16,26,9,30],[16,31,9,36],[17,4,9,36,"_s"],[17,6,9,36],[18,4,10,2],[18,10,10,8],[18,11,10,9,"isPlaying"],[18,20,10,18],[18,22,10,20,"setIsPlaying"],[18,34,10,32],[18,35,10,33],[18,38,10,36],[18,42,10,36,"useState"],[18,48,10,44],[18,49,10,44,"useState"],[18,57,10,44],[18,59,10,45],[18,64,10,50],[18,65,10,51],[19,4,11,2],[19,10,11,8],[19,11,11,9,"isLoading"],[19,20,11,18],[19,22,11,20,"setIsLoading"],[19,34,11,32],[19,35,11,33],[19,38,11,36],[19,42,11,36,"useState"],[19,48,11,44],[19,49,11,44,"useState"],[19,57,11,44],[19,59,11,45],[19,64,11,50],[19,65,11,51],[20,4,12,2],[20,10,12,8,"soundRef"],[20,18,12,16],[20,21,12,19],[20,25,12,19,"useRef"],[20,31,12,25],[20,32,12,25,"useRef"],[20,38,12,25],[20,40,12,46],[20,44,12,50],[20,45,12,51],[21,4,13,2],[21,10,13,8,"cacheRef"],[21,18,13,16],[21,21,13,19],[21,25,13,19,"useRef"],[21,31,13,25],[21,32,13,25,"useRef"],[21,38,13,25],[21,40,13,38],[21,41,13,39],[21,42,13,40],[21,43,13,41],[22,4,15,2],[22,10,15,8,"playAudio"],[22,19,15,17],[22,22,15,20],[22,28,15,20,"playAudio"],[22,29,15,27,"messageId"],[22,38,15,44],[22,40,15,46,"text"],[22,44,15,58],[22,46,15,60,"lang"],[22,50,15,72],[22,52,15,74,"backendUrl"],[22,62,15,92],[22,67,15,97],[23,6,16,4],[23,10,16,8],[24,8,17,6],[25,8,18,6],[25,12,18,10,"cacheRef"],[25,20,18,18],[25,21,18,19,"current"],[25,28,18,26],[25,29,18,27,"messageId"],[25,38,18,36],[25,39,18,37],[25,41,18,39],[26,10,19,8,"console"],[26,17,19,15],[26,18,19,16,"log"],[26,21,19,19],[26,22,19,20],[26,46,19,44],[26,48,19,46,"messageId"],[26,57,19,55],[26,58,19,56],[27,10,20,8],[27,16,20,14,"playFromUri"],[27,27,20,25],[27,28,20,26,"cacheRef"],[27,36,20,34],[27,37,20,35,"current"],[27,44,20,42],[27,45,20,43,"messageId"],[27,54,20,52],[27,55,20,53],[27,56,20,54],[28,10,21,8],[29,8,22,6],[30,8,24,6,"setIsLoading"],[30,20,24,18],[30,21,24,19],[30,25,24,23],[30,26,24,24],[31,8,25,6,"console"],[31,15,25,13],[31,16,25,14,"log"],[31,19,25,17],[31,20,25,18],[31,51,25,49],[31,53,25,51],[32,10,25,53,"messageId"],[32,19,25,62],[33,10,25,64,"text"],[33,14,25,68],[33,16,25,70,"text"],[33,20,25,74],[33,21,25,75,"substring"],[33,30,25,84],[33,31,25,85],[33,32,25,86],[33,34,25,88],[33,36,25,90],[34,8,25,92],[34,9,25,93],[34,10,25,94],[36,8,27,6],[37,8,28,6],[37,14,28,12,"response"],[37,22,28,20],[37,25,28,23],[37,31,28,29,"fetch"],[37,36,28,34],[37,37,28,35],[37,40,28,38,"backendUrl"],[37,50,28,48],[37,60,28,58],[37,62,28,60],[38,10,29,8,"method"],[38,16,29,14],[38,18,29,16],[38,24,29,22],[39,10,30,8,"headers"],[39,17,30,15],[39,19,30,17],[40,12,31,10],[40,26,31,24],[40,28,31,26],[41,10,32,8],[41,11,32,9],[42,10,33,8,"body"],[42,14,33,12],[42,16,33,14,"JSON"],[42,20,33,18],[42,21,33,19,"stringify"],[42,30,33,28],[42,31,33,29],[43,12,33,31,"text"],[43,16,33,35],[44,12,33,37,"lang"],[44,16,33,41],[45,12,33,43,"provider"],[45,20,33,51],[45,22,33,53],[46,10,33,62],[46,11,33,63],[47,8,34,6],[47,9,34,7],[47,10,34,8],[48,8,36,6,"console"],[48,15,36,13],[48,16,36,14,"log"],[48,19,36,17],[48,20,36,18],[48,45,36,43],[48,47,36,45,"response"],[48,55,36,53],[48,56,36,54,"status"],[48,62,36,60],[48,63,36,61],[49,8,38,6],[49,12,38,10],[49,13,38,11,"response"],[49,21,38,19],[49,22,38,20,"ok"],[49,24,38,22],[49,26,38,24],[50,10,39,8],[50,16,39,14,"errorText"],[50,25,39,23],[50,28,39,26],[50,34,39,32,"response"],[50,42,39,40],[50,43,39,41,"text"],[50,47,39,45],[50,48,39,46],[50,49,39,47],[51,10,40,8,"console"],[51,17,40,15],[51,18,40,16,"error"],[51,23,40,21],[51,24,40,22],[51,38,40,36],[51,40,40,38,"errorText"],[51,49,40,47],[51,50,40,48],[52,10,41,8],[52,16,41,14],[52,20,41,18,"Error"],[52,25,41,23],[52,26,41,24],[52,41,41,39,"response"],[52,49,41,47],[52,50,41,48,"status"],[52,56,41,54],[52,62,41,60,"errorText"],[52,71,41,69],[52,73,41,71],[52,74,41,72],[53,8,42,6],[55,8,44,6],[56,8,45,6],[56,14,45,12,"blob"],[56,18,45,16],[56,21,45,19],[56,27,45,25,"response"],[56,35,45,33],[56,36,45,34,"blob"],[56,40,45,38],[56,41,45,39],[56,42,45,40],[57,8,46,6,"console"],[57,15,46,13],[57,16,46,14,"log"],[57,19,46,17],[57,20,46,18],[57,39,46,37],[57,41,46,39,"blob"],[57,45,46,43],[57,46,46,44,"size"],[57,50,46,48],[57,52,46,50],[57,59,46,57],[57,60,46,58],[58,8,48,6],[58,14,48,12,"reader"],[58,20,48,18],[58,23,48,21],[58,27,48,25,"FileReader"],[58,37,48,35],[58,38,48,36],[58,39,48,37],[59,8,50,6,"reader"],[59,14,50,12],[59,15,50,13,"onloadend"],[59,24,50,22],[59,27,50,25],[59,39,50,37],[60,10,51,8],[60,14,51,12],[61,12,52,10],[61,18,52,16,"dataUri"],[61,25,52,23],[61,28,52,26,"reader"],[61,34,52,32],[61,35,52,33,"result"],[61,41,52,49],[63,12,54,10],[64,12,55,10,"cacheRef"],[64,20,55,18],[64,21,55,19,"current"],[64,28,55,26],[64,29,55,27,"messageId"],[64,38,55,36],[64,39,55,37],[64,42,55,40,"dataUri"],[64,49,55,47],[65,12,57,10,"console"],[65,19,57,17],[65,20,57,18,"log"],[65,23,57,21],[65,24,57,22],[65,68,57,66],[65,69,57,67],[66,12,58,10],[66,18,58,16,"playFromUri"],[66,29,58,27],[66,30,58,28,"dataUri"],[66,37,58,35],[66,38,58,36],[67,10,59,8],[67,11,59,9],[67,12,59,10],[67,19,59,17,"playError"],[67,28,59,26],[67,30,59,28],[68,12,60,10,"console"],[68,19,60,17],[68,20,60,18,"error"],[68,25,60,23],[68,26,60,24],[68,41,60,39],[68,43,60,41,"playError"],[68,52,60,50],[68,53,60,51],[69,12,61,10,"setIsLoading"],[69,24,61,22],[69,25,61,23],[69,30,61,28],[69,31,61,29],[70,10,62,8],[71,8,63,6],[71,9,63,7],[72,8,65,6,"reader"],[72,14,65,12],[72,15,65,13,"onerror"],[72,22,65,20],[72,25,65,23],[72,31,65,29],[73,10,66,8,"console"],[73,17,66,15],[73,18,66,16,"error"],[73,23,66,21],[73,24,66,22],[73,44,66,42],[73,45,66,43],[74,10,67,8,"setIsLoading"],[74,22,67,20],[74,23,67,21],[74,28,67,26],[74,29,67,27],[75,8,68,6],[75,9,68,7],[76,8,70,6,"reader"],[76,14,70,12],[76,15,70,13,"readAsDataURL"],[76,28,70,26],[76,29,70,27,"blob"],[76,33,70,31],[76,34,70,32],[77,6,71,4],[77,7,71,5],[77,8,71,6],[77,15,71,13,"error"],[77,20,71,18],[77,22,71,20],[78,8,72,6,"console"],[78,15,72,13],[78,16,72,14,"error"],[78,21,72,19],[78,22,72,20],[78,47,72,45],[78,49,72,47,"error"],[78,54,72,52],[78,55,72,53],[79,8,73,6,"setIsLoading"],[79,20,73,18],[79,21,73,19],[79,26,73,24],[79,27,73,25],[80,6,74,4],[81,4,75,2],[81,5,75,3],[82,4,77,2],[82,10,77,8,"playFromUri"],[82,21,77,19],[82,24,77,22],[82,30,77,29,"uri"],[82,33,77,40],[82,37,77,45],[83,6,78,4],[83,10,78,8],[84,8,79,6,"console"],[84,15,79,13],[84,16,79,14,"log"],[84,19,79,17],[84,20,79,18],[84,60,79,58],[84,62,79,60,"uri"],[84,65,79,63],[84,66,79,64,"length"],[84,72,79,70],[84,73,79,71],[86,8,81,6],[87,8,82,6],[87,12,82,10,"soundRef"],[87,20,82,18],[87,21,82,19,"current"],[87,28,82,26],[87,30,82,28],[88,10,83,8,"console"],[88,17,83,15],[88,18,83,16,"log"],[88,21,83,19],[88,22,83,20],[88,53,83,51],[88,54,83,52],[89,10,84,8],[89,14,84,12],[90,12,85,10],[90,18,85,16,"soundRef"],[90,26,85,24],[90,27,85,25,"current"],[90,34,85,32],[90,35,85,33,"stopAsync"],[90,44,85,42],[90,45,85,43],[90,46,85,44],[91,12,86,10],[91,18,86,16,"soundRef"],[91,26,86,24],[91,27,86,25,"current"],[91,34,86,32],[91,35,86,33,"unloadAsync"],[91,46,86,44],[91,47,86,45],[91,48,86,46],[92,10,87,8],[92,11,87,9],[92,12,87,10],[92,19,87,17,"e"],[92,20,87,18],[92,22,87,20],[93,12,88,10,"console"],[93,19,88,17],[93,20,88,18,"log"],[93,23,88,21],[93,24,88,22],[93,59,88,57],[93,61,88,59,"e"],[93,62,88,60],[93,63,88,61],[94,10,89,8],[95,10,90,8,"soundRef"],[95,18,90,16],[95,19,90,17,"current"],[95,26,90,24],[95,29,90,27],[95,33,90,31],[96,8,91,6],[98,8,93,6],[99,8,94,6],[99,14,94,12,"Audio"],[99,21,94,17],[99,22,94,17,"Audio"],[99,27,94,17],[99,28,94,18,"setAudioModeAsync"],[99,45,94,35],[99,46,94,36],[100,10,95,8,"allowsRecordingIOS"],[100,28,95,26],[100,30,95,28],[100,35,95,33],[101,10,96,8,"playsInSilentModeIOS"],[101,30,96,28],[101,32,96,30],[101,36,96,34],[102,10,97,8,"shouldDuckAndroid"],[102,27,97,25],[102,29,97,27],[102,33,97,31],[103,10,98,8,"playThroughEarpieceAndroid"],[103,36,98,34],[103,38,98,36],[103,43,98,41],[104,10,99,8,"staysActiveInBackground"],[104,33,99,31],[104,35,99,33],[105,8,100,6],[105,9,100,7],[105,10,100,8],[106,8,102,6,"console"],[106,15,102,13],[106,16,102,14,"log"],[106,19,102,17],[106,20,102,18],[106,60,102,58],[106,61,102,59],[108,8,104,6],[109,8,105,6],[109,14,105,12],[110,10,105,14,"sound"],[111,8,105,20],[111,9,105,21],[111,12,105,24],[111,18,105,30,"Audio"],[111,25,105,35],[111,26,105,35,"Audio"],[111,31,105,35],[111,32,105,36,"Sound"],[111,37,105,41],[111,38,105,42,"createAsync"],[111,49,105,53],[111,50,106,8],[112,10,106,10,"uri"],[113,8,106,14],[113,9,106,15],[113,11,107,8],[114,10,107,10,"shouldPlay"],[114,20,107,20],[114,22,107,22],[115,8,107,28],[115,9,107,29],[116,8,107,31],[117,8,108,8,"onPlaybackStatusUpdate"],[117,30,109,6],[117,31,109,7],[118,8,111,6,"soundRef"],[118,16,111,14],[118,17,111,15,"current"],[118,24,111,22],[118,27,111,25,"sound"],[118,32,111,30],[119,8,112,6,"console"],[119,15,112,13],[119,16,112,14,"log"],[119,19,112,17],[119,20,112,18],[119,50,112,48],[119,51,112,49],[121,8,114,6],[122,8,115,6],[122,14,115,12,"status"],[122,20,115,18],[122,23,115,21],[122,29,115,27,"sound"],[122,34,115,32],[122,35,115,33,"getStatusAsync"],[122,49,115,47],[122,50,115,48],[122,51,115,49],[123,8,116,6,"console"],[123,15,116,13],[123,16,116,14,"log"],[123,19,116,17],[123,20,116,18],[123,38,116,36],[123,40,116,38,"status"],[123,46,116,44],[123,47,116,45],[124,8,118,6],[124,12,118,10,"status"],[124,18,118,16],[124,19,118,17,"isLoaded"],[124,27,118,25],[124,29,118,27],[125,10,119,8,"console"],[125,17,119,15],[125,18,119,16,"log"],[125,21,119,19],[125,22,119,20],[125,47,119,45],[125,48,119,46],[126,10,120,8],[126,16,120,14,"sound"],[126,21,120,19],[126,22,120,20,"playAsync"],[126,31,120,29],[126,32,120,30],[126,33,120,31],[127,10,121,8,"setIsPlaying"],[127,22,121,20],[127,23,121,21],[127,27,121,25],[127,28,121,26],[128,10,122,8,"console"],[128,17,122,15],[128,18,122,16,"log"],[128,21,122,19],[128,22,122,20],[128,40,122,38],[128,41,122,39],[129,8,123,6],[129,9,123,7],[129,15,123,13],[130,10,124,8],[130,16,124,14],[130,20,124,18,"Error"],[130,25,124,23],[130,26,124,24],[130,48,124,46],[130,49,124,47],[131,8,125,6],[132,8,127,6,"setIsLoading"],[132,20,127,18],[132,21,127,19],[132,26,127,24],[132,27,127,25],[133,6,128,4],[133,7,128,5],[133,8,128,6],[133,15,128,13,"error"],[133,20,128,18],[133,22,128,20],[134,8,129,6,"console"],[134,15,129,13],[134,16,129,14,"error"],[134,21,129,19],[134,22,129,20],[134,47,129,45],[134,49,129,47,"error"],[134,54,129,52],[134,55,129,53],[135,8,130,6],[135,12,130,10,"error"],[135,17,130,15],[135,29,130,27,"Error"],[135,34,130,32],[135,36,130,34],[136,10,131,8,"console"],[136,17,131,15],[136,18,131,16,"error"],[136,23,131,21],[136,24,131,22],[136,42,131,40],[136,44,131,42,"error"],[136,49,131,47],[136,50,131,48,"message"],[136,57,131,55],[136,59,131,57,"error"],[136,64,131,62],[136,65,131,63,"stack"],[136,70,131,68],[136,71,131,69],[137,8,132,6],[138,8,133,6,"setIsLoading"],[138,20,133,18],[138,21,133,19],[138,26,133,24],[138,27,133,25],[139,8,134,6,"setIsPlaying"],[139,20,134,18],[139,21,134,19],[139,26,134,24],[139,27,134,25],[140,6,135,4],[141,4,136,2],[141,5,136,3],[142,4,138,2],[142,10,138,8,"onPlaybackStatusUpdate"],[142,32,138,30],[142,35,138,34,"status"],[142,41,138,45],[142,45,138,50],[143,6,139,4],[143,10,139,8,"status"],[143,16,139,14],[143,17,139,15,"didJustFinish"],[143,30,139,28],[143,32,139,30],[144,8,140,6,"console"],[144,15,140,13],[144,16,140,14,"log"],[144,19,140,17],[144,20,140,18],[144,46,140,44],[144,47,140,45],[145,8,141,6,"setIsPlaying"],[145,20,141,18],[145,21,141,19],[145,26,141,24],[145,27,141,25],[146,8,142,6],[146,12,142,10,"soundRef"],[146,20,142,18],[146,21,142,19,"current"],[146,28,142,26],[146,30,142,28],[147,10,143,8,"soundRef"],[147,18,143,16],[147,19,143,17,"current"],[147,26,143,24],[147,27,143,25,"unloadAsync"],[147,38,143,36],[147,39,143,37],[147,40,143,38],[148,8,144,6],[149,6,145,4],[150,4,146,2],[150,5,146,3],[151,4,148,2],[151,10,148,8,"stopAudio"],[151,19,148,17],[151,22,148,20],[151,28,148,20,"stopAudio"],[151,29,148,20],[151,34,148,32],[152,6,149,4],[152,10,149,8,"soundRef"],[152,18,149,16],[152,19,149,17,"current"],[152,26,149,24],[152,28,149,26],[153,8,150,6],[153,14,150,12,"soundRef"],[153,22,150,20],[153,23,150,21,"current"],[153,30,150,28],[153,31,150,29,"stopAsync"],[153,40,150,38],[153,41,150,39],[153,42,150,40],[154,8,151,6],[154,14,151,12,"soundRef"],[154,22,151,20],[154,23,151,21,"current"],[154,30,151,28],[154,31,151,29,"unloadAsync"],[154,42,151,40],[154,43,151,41],[154,44,151,42],[155,8,152,6,"soundRef"],[155,16,152,14],[155,17,152,15,"current"],[155,24,152,22],[155,27,152,25],[155,31,152,29],[156,6,153,4],[157,6,154,4,"setIsPlaying"],[157,18,154,16],[157,19,154,17],[157,24,154,22],[157,25,154,23],[158,4,155,2],[158,5,155,3],[159,4,157,2],[159,11,157,9],[160,6,158,4,"isPlaying"],[160,15,158,13],[161,6,159,4,"isLoading"],[161,15,159,13],[162,6,160,4,"playAudio"],[162,15,160,13],[163,6,161,4,"stopAudio"],[164,4,162,2],[164,5,162,3],[165,2,163,0],[165,3,163,1],[166,2,163,2,"_s"],[166,4,163,2],[166,5,9,13,"useAudioPlayer"],[166,19,9,27],[167,0,9,27],[167,3]],"functionMap":{"names":["<global>","useAudioPlayer","playAudio","reader.onloadend","reader.onerror","playFromUri","onPlaybackStatusUpdate","stopAudio"],"mappings":"AAA;8BCQ;oBCM;yBCmC;ODa;uBEE;OFG;GDO;sBIE;GJ2D;iCKE;GLQ;oBME;GNO;CDQ"},"hasCjsExports":false},"type":"js/module"}]}