{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"expo-av","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":32,"index":74}}],"key":"VxVG0TWBdB+Oc1qOQ32HKtN+H5M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useAudioPlayer\", {\n    enumerable: true,\n    get: function () {\n      return useAudioPlayer;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[2], \"react\");\n  var _expoAv = require(_dependencyMap[3], \"expo-av\");\n  var useAudioPlayer = () => {\n    _s();\n    var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      isPlaying = _useState2[0],\n      setIsPlaying = _useState2[1];\n    var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n    var soundRef = (0, _react.useRef)(null);\n    var cacheRef = (0, _react.useRef)({});\n    var playAudio = /*#__PURE__*/function () {\n      var _ref = (0, _asyncToGenerator.default)(function* (messageId, text, lang, backendUrl) {\n        try {\n          // Check cache first\n          if (cacheRef.current[messageId]) {\n            console.log('🔊 Playing from cache:', messageId);\n            yield playFromUri(cacheRef.current[messageId]);\n            return;\n          }\n          setIsLoading(true);\n          console.log('🔊 Fetching audio from TTS...', {\n            messageId,\n            text: text.substring(0, 50)\n          });\n\n          // Request TTS from backend (now using OpenAI)\n          var response = yield fetch(`${backendUrl}/api/tts`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              text,\n              lang,\n              provider: 'openai'\n            })\n          });\n          console.log('📥 TTS Response status:', response.status);\n          if (!response.ok) {\n            var errorText = yield response.text();\n            console.error('❌ TTS Error:', errorText);\n            throw new Error(`TTS failed: ${response.status} - ${errorText}`);\n          }\n\n          // For web/mobile - use data URI directly\n          var blob = yield response.blob();\n          console.log('📦 Blob received:', blob.size, 'bytes');\n          var reader = new FileReader();\n          reader.onloadend = /*#__PURE__*/(0, _asyncToGenerator.default)(function* () {\n            try {\n              var dataUri = reader.result;\n\n              // Cache the data URI\n              cacheRef.current[messageId] = dataUri;\n              console.log('✅ Audio cached as data URI, playing now...');\n              yield playFromUri(dataUri);\n            } catch (playError) {\n              console.error('❌ Play error:', playError);\n              setIsLoading(false);\n            }\n          });\n          reader.onerror = () => {\n            console.error('❌ FileReader error');\n            setIsLoading(false);\n          };\n          reader.readAsDataURL(blob);\n        } catch (error) {\n          console.error('❌ Audio playback error:', error);\n          setIsLoading(false);\n        }\n      });\n      return function playAudio(_x, _x2, _x3, _x4) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var playFromUri = /*#__PURE__*/function () {\n      var _ref3 = (0, _asyncToGenerator.default)(function* (uri) {\n        try {\n          console.log('🔊 playFromUri called with uri length:', uri.length);\n\n          // Stop and cleanup any currently playing sound\n          if (soundRef.current) {\n            console.log('🛑 Stopping previous sound...');\n            try {\n              yield soundRef.current.stopAsync();\n              yield soundRef.current.unloadAsync();\n            } catch (e) {\n              console.log('⚠️ Error stopping previous sound:', e);\n            }\n            soundRef.current = null;\n          }\n\n          // Set audio mode\n          yield _expoAv.Audio.setAudioModeAsync({\n            allowsRecordingIOS: false,\n            playsInSilentModeIOS: true,\n            shouldDuckAndroid: true,\n            playThroughEarpieceAndroid: false,\n            staysActiveInBackground: false\n          });\n          console.log('🔊 Creating new sound from data URI...');\n\n          // Create sound without autoplay first\n          var _yield$Audio$Sound$cr = yield _expoAv.Audio.Sound.createAsync({\n              uri\n            }, {\n              shouldPlay: false\n            },\n            // Don't autoplay yet\n            onPlaybackStatusUpdate),\n            sound = _yield$Audio$Sound$cr.sound;\n          soundRef.current = sound;\n          console.log('✅ Sound created successfully');\n\n          // Check if sound is loaded\n          var status = yield sound.getStatusAsync();\n          console.log('📊 Sound status:', status);\n          if (status.isLoaded) {\n            console.log('▶️ Playing sound now...');\n            yield sound.playAsync();\n            setIsPlaying(true);\n            console.log('✅ Sound playing!');\n          } else {\n            throw new Error('Sound failed to load');\n          }\n          setIsLoading(false);\n        } catch (error) {\n          console.error('❌ Failed to play audio:', error);\n          if (error instanceof Error) {\n            console.error('❌ Error details:', error.message, error.stack);\n          }\n          setIsLoading(false);\n          setIsPlaying(false);\n        }\n      });\n      return function playFromUri(_x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var onPlaybackStatusUpdate = status => {\n      if (status.didJustFinish) {\n        console.log('✅ Audio finished playing');\n        setIsPlaying(false);\n        if (soundRef.current) {\n          soundRef.current.unloadAsync();\n        }\n      }\n    };\n    var stopAudio = /*#__PURE__*/function () {\n      var _ref4 = (0, _asyncToGenerator.default)(function* () {\n        if (soundRef.current) {\n          yield soundRef.current.stopAsync();\n          yield soundRef.current.unloadAsync();\n          soundRef.current = null;\n        }\n        setIsPlaying(false);\n      });\n      return function stopAudio() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    return {\n      isPlaying,\n      isLoading,\n      playAudio,\n      stopAudio\n    };\n  };\n  _s(useAudioPlayer, \"crdKrPtVI1HOnOWWBSi9kosOb8o=\");\n});","lineCount":196,"map":[[13,2,9,0,"Object"],[13,8,9,0],[13,9,9,0,"defineProperty"],[13,23,9,0],[13,24,9,0,"exports"],[13,31,9,0],[14,4,9,0,"enumerable"],[14,14,9,0],[15,4,9,0,"get"],[15,7,9,0],[15,18,9,0,"get"],[15,19,9,0],[16,6,9,0],[16,13,9,0,"useAudioPlayer"],[16,27,9,0],[17,4,9,0],[18,2,9,0],[19,2,163,2],[19,6,163,2,"_babelRuntimeHelpersAsyncToGenerator"],[19,42,163,2],[19,45,163,2,"require"],[19,52,163,2],[19,53,163,2,"_dependencyMap"],[19,67,163,2],[20,2,163,2],[20,6,163,2,"_asyncToGenerator"],[20,23,163,2],[20,26,163,2,"_interopDefault"],[20,41,163,2],[20,42,163,2,"_babelRuntimeHelpersAsyncToGenerator"],[20,78,163,2],[21,2,163,2],[21,6,163,2,"_babelRuntimeHelpersSlicedToArray"],[21,39,163,2],[21,42,163,2,"require"],[21,49,163,2],[21,50,163,2,"_dependencyMap"],[21,64,163,2],[22,2,163,2],[22,6,163,2,"_slicedToArray"],[22,20,163,2],[22,23,163,2,"_interopDefault"],[22,38,163,2],[22,39,163,2,"_babelRuntimeHelpersSlicedToArray"],[22,72,163,2],[23,2,1,0],[23,6,1,0,"_react"],[23,12,1,0],[23,15,1,0,"require"],[23,22,1,0],[23,23,1,0,"_dependencyMap"],[23,37,1,0],[24,2,2,0],[24,6,2,0,"_expoAv"],[24,13,2,0],[24,16,2,0,"require"],[24,23,2,0],[24,24,2,0,"_dependencyMap"],[24,38,2,0],[25,2,9,7],[25,6,9,13,"useAudioPlayer"],[25,20,9,27],[25,23,9,30,"useAudioPlayer"],[25,24,9,30],[25,29,9,36],[26,4,9,36,"_s"],[26,6,9,36],[27,4,10,2],[27,8,10,2,"_useState"],[27,17,10,2],[27,20,10,36],[27,24,10,36,"useState"],[27,30,10,44],[27,31,10,44,"useState"],[27,39,10,44],[27,41,10,45],[27,46,10,50],[27,47,10,51],[28,6,10,51,"_useState2"],[28,16,10,51],[28,23,10,51,"_slicedToArray"],[28,37,10,51],[28,38,10,51,"default"],[28,45,10,51],[28,47,10,51,"_useState"],[28,56,10,51],[29,6,10,9,"isPlaying"],[29,15,10,18],[29,18,10,18,"_useState2"],[29,28,10,18],[30,6,10,20,"setIsPlaying"],[30,18,10,32],[30,21,10,32,"_useState2"],[30,31,10,32],[31,4,11,2],[31,8,11,2,"_useState3"],[31,18,11,2],[31,21,11,36],[31,25,11,36,"useState"],[31,31,11,44],[31,32,11,44,"useState"],[31,40,11,44],[31,42,11,45],[31,47,11,50],[31,48,11,51],[32,6,11,51,"_useState4"],[32,16,11,51],[32,23,11,51,"_slicedToArray"],[32,37,11,51],[32,38,11,51,"default"],[32,45,11,51],[32,47,11,51,"_useState3"],[32,57,11,51],[33,6,11,9,"isLoading"],[33,15,11,18],[33,18,11,18,"_useState4"],[33,28,11,18],[34,6,11,20,"setIsLoading"],[34,18,11,32],[34,21,11,32,"_useState4"],[34,31,11,32],[35,4,12,2],[35,8,12,8,"soundRef"],[35,16,12,16],[35,19,12,19],[35,23,12,19,"useRef"],[35,29,12,25],[35,30,12,25,"useRef"],[35,36,12,25],[35,38,12,46],[35,42,12,50],[35,43,12,51],[36,4,13,2],[36,8,13,8,"cacheRef"],[36,16,13,16],[36,19,13,19],[36,23,13,19,"useRef"],[36,29,13,25],[36,30,13,25,"useRef"],[36,36,13,25],[36,38,13,38],[36,39,13,39],[36,40,13,40],[36,41,13,41],[37,4,15,2],[37,8,15,8,"playAudio"],[37,17,15,17],[38,6,15,17],[38,10,15,17,"_ref"],[38,14,15,17],[38,21,15,17,"_asyncToGenerator"],[38,38,15,17],[38,39,15,17,"default"],[38,46,15,17],[38,48,15,20],[38,59,15,27,"messageId"],[38,68,15,44],[38,70,15,46,"text"],[38,74,15,58],[38,76,15,60,"lang"],[38,80,15,72],[38,82,15,74,"backendUrl"],[38,92,15,92],[38,94,15,97],[39,8,16,4],[39,12,16,8],[40,10,17,6],[41,10,18,6],[41,14,18,10,"cacheRef"],[41,22,18,18],[41,23,18,19,"current"],[41,30,18,26],[41,31,18,27,"messageId"],[41,40,18,36],[41,41,18,37],[41,43,18,39],[42,12,19,8,"console"],[42,19,19,15],[42,20,19,16,"log"],[42,23,19,19],[42,24,19,20],[42,48,19,44],[42,50,19,46,"messageId"],[42,59,19,55],[42,60,19,56],[43,12,20,8],[43,18,20,14,"playFromUri"],[43,29,20,25],[43,30,20,26,"cacheRef"],[43,38,20,34],[43,39,20,35,"current"],[43,46,20,42],[43,47,20,43,"messageId"],[43,56,20,52],[43,57,20,53],[43,58,20,54],[44,12,21,8],[45,10,22,6],[46,10,24,6,"setIsLoading"],[46,22,24,18],[46,23,24,19],[46,27,24,23],[46,28,24,24],[47,10,25,6,"console"],[47,17,25,13],[47,18,25,14,"log"],[47,21,25,17],[47,22,25,18],[47,53,25,49],[47,55,25,51],[48,12,25,53,"messageId"],[48,21,25,62],[49,12,25,64,"text"],[49,16,25,68],[49,18,25,70,"text"],[49,22,25,74],[49,23,25,75,"substring"],[49,32,25,84],[49,33,25,85],[49,34,25,86],[49,36,25,88],[49,38,25,90],[50,10,25,92],[50,11,25,93],[50,12,25,94],[52,10,27,6],[53,10,28,6],[53,14,28,12,"response"],[53,22,28,20],[53,31,28,29,"fetch"],[53,36,28,34],[53,37,28,35],[53,40,28,38,"backendUrl"],[53,50,28,48],[53,60,28,58],[53,62,28,60],[54,12,29,8,"method"],[54,18,29,14],[54,20,29,16],[54,26,29,22],[55,12,30,8,"headers"],[55,19,30,15],[55,21,30,17],[56,14,31,10],[56,28,31,24],[56,30,31,26],[57,12,32,8],[57,13,32,9],[58,12,33,8,"body"],[58,16,33,12],[58,18,33,14,"JSON"],[58,22,33,18],[58,23,33,19,"stringify"],[58,32,33,28],[58,33,33,29],[59,14,33,31,"text"],[59,18,33,35],[60,14,33,37,"lang"],[60,18,33,41],[61,14,33,43,"provider"],[61,22,33,51],[61,24,33,53],[62,12,33,62],[62,13,33,63],[63,10,34,6],[63,11,34,7],[63,12,34,8],[64,10,36,6,"console"],[64,17,36,13],[64,18,36,14,"log"],[64,21,36,17],[64,22,36,18],[64,47,36,43],[64,49,36,45,"response"],[64,57,36,53],[64,58,36,54,"status"],[64,64,36,60],[64,65,36,61],[65,10,38,6],[65,14,38,10],[65,15,38,11,"response"],[65,23,38,19],[65,24,38,20,"ok"],[65,26,38,22],[65,28,38,24],[66,12,39,8],[66,16,39,14,"errorText"],[66,25,39,23],[66,34,39,32,"response"],[66,42,39,40],[66,43,39,41,"text"],[66,47,39,45],[66,48,39,46],[66,49,39,47],[67,12,40,8,"console"],[67,19,40,15],[67,20,40,16,"error"],[67,25,40,21],[67,26,40,22],[67,40,40,36],[67,42,40,38,"errorText"],[67,51,40,47],[67,52,40,48],[68,12,41,8],[68,18,41,14],[68,22,41,18,"Error"],[68,27,41,23],[68,28,41,24],[68,43,41,39,"response"],[68,51,41,47],[68,52,41,48,"status"],[68,58,41,54],[68,64,41,60,"errorText"],[68,73,41,69],[68,75,41,71],[68,76,41,72],[69,10,42,6],[71,10,44,6],[72,10,45,6],[72,14,45,12,"blob"],[72,18,45,16],[72,27,45,25,"response"],[72,35,45,33],[72,36,45,34,"blob"],[72,40,45,38],[72,41,45,39],[72,42,45,40],[73,10,46,6,"console"],[73,17,46,13],[73,18,46,14,"log"],[73,21,46,17],[73,22,46,18],[73,41,46,37],[73,43,46,39,"blob"],[73,47,46,43],[73,48,46,44,"size"],[73,52,46,48],[73,54,46,50],[73,61,46,57],[73,62,46,58],[74,10,48,6],[74,14,48,12,"reader"],[74,20,48,18],[74,23,48,21],[74,27,48,25,"FileReader"],[74,37,48,35],[74,38,48,36],[74,39,48,37],[75,10,50,6,"reader"],[75,16,50,12],[75,17,50,13,"onloadend"],[75,26,50,22],[75,46,50,22,"_asyncToGenerator"],[75,63,50,22],[75,64,50,22,"default"],[75,71,50,22],[75,73,50,25],[75,86,50,37],[76,12,51,8],[76,16,51,12],[77,14,52,10],[77,18,52,16,"dataUri"],[77,25,52,23],[77,28,52,26,"reader"],[77,34,52,32],[77,35,52,33,"result"],[77,41,52,49],[79,14,54,10],[80,14,55,10,"cacheRef"],[80,22,55,18],[80,23,55,19,"current"],[80,30,55,26],[80,31,55,27,"messageId"],[80,40,55,36],[80,41,55,37],[80,44,55,40,"dataUri"],[80,51,55,47],[81,14,57,10,"console"],[81,21,57,17],[81,22,57,18,"log"],[81,25,57,21],[81,26,57,22],[81,70,57,66],[81,71,57,67],[82,14,58,10],[82,20,58,16,"playFromUri"],[82,31,58,27],[82,32,58,28,"dataUri"],[82,39,58,35],[82,40,58,36],[83,12,59,8],[83,13,59,9],[83,14,59,10],[83,21,59,17,"playError"],[83,30,59,26],[83,32,59,28],[84,14,60,10,"console"],[84,21,60,17],[84,22,60,18,"error"],[84,27,60,23],[84,28,60,24],[84,43,60,39],[84,45,60,41,"playError"],[84,54,60,50],[84,55,60,51],[85,14,61,10,"setIsLoading"],[85,26,61,22],[85,27,61,23],[85,32,61,28],[85,33,61,29],[86,12,62,8],[87,10,63,6],[87,11,63,7],[88,10,65,6,"reader"],[88,16,65,12],[88,17,65,13,"onerror"],[88,24,65,20],[88,27,65,23],[88,33,65,29],[89,12,66,8,"console"],[89,19,66,15],[89,20,66,16,"error"],[89,25,66,21],[89,26,66,22],[89,46,66,42],[89,47,66,43],[90,12,67,8,"setIsLoading"],[90,24,67,20],[90,25,67,21],[90,30,67,26],[90,31,67,27],[91,10,68,6],[91,11,68,7],[92,10,70,6,"reader"],[92,16,70,12],[92,17,70,13,"readAsDataURL"],[92,30,70,26],[92,31,70,27,"blob"],[92,35,70,31],[92,36,70,32],[93,8,71,4],[93,9,71,5],[93,10,71,6],[93,17,71,13,"error"],[93,22,71,18],[93,24,71,20],[94,10,72,6,"console"],[94,17,72,13],[94,18,72,14,"error"],[94,23,72,19],[94,24,72,20],[94,49,72,45],[94,51,72,47,"error"],[94,56,72,52],[94,57,72,53],[95,10,73,6,"setIsLoading"],[95,22,73,18],[95,23,73,19],[95,28,73,24],[95,29,73,25],[96,8,74,4],[97,6,75,2],[97,7,75,3],[98,6,75,3],[98,22,15,8,"playAudio"],[98,31,15,17,"playAudio"],[98,32,15,17,"_x"],[98,34,15,17],[98,36,15,17,"_x2"],[98,39,15,17],[98,41,15,17,"_x3"],[98,44,15,17],[98,46,15,17,"_x4"],[98,49,15,17],[99,8,15,17],[99,15,15,17,"_ref"],[99,19,15,17],[99,20,15,17,"apply"],[99,25,15,17],[99,32,15,17,"arguments"],[99,41,15,17],[100,6,15,17],[101,4,15,17],[101,7,75,3],[102,4,77,2],[102,8,77,8,"playFromUri"],[102,19,77,19],[103,6,77,19],[103,10,77,19,"_ref3"],[103,15,77,19],[103,22,77,19,"_asyncToGenerator"],[103,39,77,19],[103,40,77,19,"default"],[103,47,77,19],[103,49,77,22],[103,60,77,29,"uri"],[103,63,77,40],[103,65,77,45],[104,8,78,4],[104,12,78,8],[105,10,79,6,"console"],[105,17,79,13],[105,18,79,14,"log"],[105,21,79,17],[105,22,79,18],[105,62,79,58],[105,64,79,60,"uri"],[105,67,79,63],[105,68,79,64,"length"],[105,74,79,70],[105,75,79,71],[107,10,81,6],[108,10,82,6],[108,14,82,10,"soundRef"],[108,22,82,18],[108,23,82,19,"current"],[108,30,82,26],[108,32,82,28],[109,12,83,8,"console"],[109,19,83,15],[109,20,83,16,"log"],[109,23,83,19],[109,24,83,20],[109,55,83,51],[109,56,83,52],[110,12,84,8],[110,16,84,12],[111,14,85,10],[111,20,85,16,"soundRef"],[111,28,85,24],[111,29,85,25,"current"],[111,36,85,32],[111,37,85,33,"stopAsync"],[111,46,85,42],[111,47,85,43],[111,48,85,44],[112,14,86,10],[112,20,86,16,"soundRef"],[112,28,86,24],[112,29,86,25,"current"],[112,36,86,32],[112,37,86,33,"unloadAsync"],[112,48,86,44],[112,49,86,45],[112,50,86,46],[113,12,87,8],[113,13,87,9],[113,14,87,10],[113,21,87,17,"e"],[113,22,87,18],[113,24,87,20],[114,14,88,10,"console"],[114,21,88,17],[114,22,88,18,"log"],[114,25,88,21],[114,26,88,22],[114,61,88,57],[114,63,88,59,"e"],[114,64,88,60],[114,65,88,61],[115,12,89,8],[116,12,90,8,"soundRef"],[116,20,90,16],[116,21,90,17,"current"],[116,28,90,24],[116,31,90,27],[116,35,90,31],[117,10,91,6],[119,10,93,6],[120,10,94,6],[120,16,94,12,"Audio"],[120,23,94,17],[120,24,94,17,"Audio"],[120,29,94,17],[120,30,94,18,"setAudioModeAsync"],[120,47,94,35],[120,48,94,36],[121,12,95,8,"allowsRecordingIOS"],[121,30,95,26],[121,32,95,28],[121,37,95,33],[122,12,96,8,"playsInSilentModeIOS"],[122,32,96,28],[122,34,96,30],[122,38,96,34],[123,12,97,8,"shouldDuckAndroid"],[123,29,97,25],[123,31,97,27],[123,35,97,31],[124,12,98,8,"playThroughEarpieceAndroid"],[124,38,98,34],[124,40,98,36],[124,45,98,41],[125,12,99,8,"staysActiveInBackground"],[125,35,99,31],[125,37,99,33],[126,10,100,6],[126,11,100,7],[126,12,100,8],[127,10,102,6,"console"],[127,17,102,13],[127,18,102,14,"log"],[127,21,102,17],[127,22,102,18],[127,62,102,58],[127,63,102,59],[129,10,104,6],[130,10,105,6],[130,14,105,6,"_yield$Audio$Sound$cr"],[130,35,105,6],[130,44,105,30,"Audio"],[130,51,105,35],[130,52,105,35,"Audio"],[130,57,105,35],[130,58,105,36,"Sound"],[130,63,105,41],[130,64,105,42,"createAsync"],[130,75,105,53],[130,76,106,8],[131,14,106,10,"uri"],[132,12,106,14],[132,13,106,15],[132,15,107,8],[133,14,107,10,"shouldPlay"],[133,24,107,20],[133,26,107,22],[134,12,107,28],[134,13,107,29],[135,12,107,31],[136,12,108,8,"onPlaybackStatusUpdate"],[136,34,109,6],[136,35,109,7],[137,12,105,14,"sound"],[137,17,105,19],[137,20,105,19,"_yield$Audio$Sound$cr"],[137,41,105,19],[137,42,105,14,"sound"],[137,47,105,19],[138,10,111,6,"soundRef"],[138,18,111,14],[138,19,111,15,"current"],[138,26,111,22],[138,29,111,25,"sound"],[138,34,111,30],[139,10,112,6,"console"],[139,17,112,13],[139,18,112,14,"log"],[139,21,112,17],[139,22,112,18],[139,52,112,48],[139,53,112,49],[141,10,114,6],[142,10,115,6],[142,14,115,12,"status"],[142,20,115,18],[142,29,115,27,"sound"],[142,34,115,32],[142,35,115,33,"getStatusAsync"],[142,49,115,47],[142,50,115,48],[142,51,115,49],[143,10,116,6,"console"],[143,17,116,13],[143,18,116,14,"log"],[143,21,116,17],[143,22,116,18],[143,40,116,36],[143,42,116,38,"status"],[143,48,116,44],[143,49,116,45],[144,10,118,6],[144,14,118,10,"status"],[144,20,118,16],[144,21,118,17,"isLoaded"],[144,29,118,25],[144,31,118,27],[145,12,119,8,"console"],[145,19,119,15],[145,20,119,16,"log"],[145,23,119,19],[145,24,119,20],[145,49,119,45],[145,50,119,46],[146,12,120,8],[146,18,120,14,"sound"],[146,23,120,19],[146,24,120,20,"playAsync"],[146,33,120,29],[146,34,120,30],[146,35,120,31],[147,12,121,8,"setIsPlaying"],[147,24,121,20],[147,25,121,21],[147,29,121,25],[147,30,121,26],[148,12,122,8,"console"],[148,19,122,15],[148,20,122,16,"log"],[148,23,122,19],[148,24,122,20],[148,42,122,38],[148,43,122,39],[149,10,123,6],[149,11,123,7],[149,17,123,13],[150,12,124,8],[150,18,124,14],[150,22,124,18,"Error"],[150,27,124,23],[150,28,124,24],[150,50,124,46],[150,51,124,47],[151,10,125,6],[152,10,127,6,"setIsLoading"],[152,22,127,18],[152,23,127,19],[152,28,127,24],[152,29,127,25],[153,8,128,4],[153,9,128,5],[153,10,128,6],[153,17,128,13,"error"],[153,22,128,18],[153,24,128,20],[154,10,129,6,"console"],[154,17,129,13],[154,18,129,14,"error"],[154,23,129,19],[154,24,129,20],[154,49,129,45],[154,51,129,47,"error"],[154,56,129,52],[154,57,129,53],[155,10,130,6],[155,14,130,10,"error"],[155,19,130,15],[155,31,130,27,"Error"],[155,36,130,32],[155,38,130,34],[156,12,131,8,"console"],[156,19,131,15],[156,20,131,16,"error"],[156,25,131,21],[156,26,131,22],[156,44,131,40],[156,46,131,42,"error"],[156,51,131,47],[156,52,131,48,"message"],[156,59,131,55],[156,61,131,57,"error"],[156,66,131,62],[156,67,131,63,"stack"],[156,72,131,68],[156,73,131,69],[157,10,132,6],[158,10,133,6,"setIsLoading"],[158,22,133,18],[158,23,133,19],[158,28,133,24],[158,29,133,25],[159,10,134,6,"setIsPlaying"],[159,22,134,18],[159,23,134,19],[159,28,134,24],[159,29,134,25],[160,8,135,4],[161,6,136,2],[161,7,136,3],[162,6,136,3],[162,22,77,8,"playFromUri"],[162,33,77,19,"playFromUri"],[162,34,77,19,"_x5"],[162,37,77,19],[163,8,77,19],[163,15,77,19,"_ref3"],[163,20,77,19],[163,21,77,19,"apply"],[163,26,77,19],[163,33,77,19,"arguments"],[163,42,77,19],[164,6,77,19],[165,4,77,19],[165,7,136,3],[166,4,138,2],[166,8,138,8,"onPlaybackStatusUpdate"],[166,30,138,30],[166,33,138,34,"status"],[166,39,138,45],[166,43,138,50],[167,6,139,4],[167,10,139,8,"status"],[167,16,139,14],[167,17,139,15,"didJustFinish"],[167,30,139,28],[167,32,139,30],[168,8,140,6,"console"],[168,15,140,13],[168,16,140,14,"log"],[168,19,140,17],[168,20,140,18],[168,46,140,44],[168,47,140,45],[169,8,141,6,"setIsPlaying"],[169,20,141,18],[169,21,141,19],[169,26,141,24],[169,27,141,25],[170,8,142,6],[170,12,142,10,"soundRef"],[170,20,142,18],[170,21,142,19,"current"],[170,28,142,26],[170,30,142,28],[171,10,143,8,"soundRef"],[171,18,143,16],[171,19,143,17,"current"],[171,26,143,24],[171,27,143,25,"unloadAsync"],[171,38,143,36],[171,39,143,37],[171,40,143,38],[172,8,144,6],[173,6,145,4],[174,4,146,2],[174,5,146,3],[175,4,148,2],[175,8,148,8,"stopAudio"],[175,17,148,17],[176,6,148,17],[176,10,148,17,"_ref4"],[176,15,148,17],[176,22,148,17,"_asyncToGenerator"],[176,39,148,17],[176,40,148,17,"default"],[176,47,148,17],[176,49,148,20],[176,62,148,32],[177,8,149,4],[177,12,149,8,"soundRef"],[177,20,149,16],[177,21,149,17,"current"],[177,28,149,24],[177,30,149,26],[178,10,150,6],[178,16,150,12,"soundRef"],[178,24,150,20],[178,25,150,21,"current"],[178,32,150,28],[178,33,150,29,"stopAsync"],[178,42,150,38],[178,43,150,39],[178,44,150,40],[179,10,151,6],[179,16,151,12,"soundRef"],[179,24,151,20],[179,25,151,21,"current"],[179,32,151,28],[179,33,151,29,"unloadAsync"],[179,44,151,40],[179,45,151,41],[179,46,151,42],[180,10,152,6,"soundRef"],[180,18,152,14],[180,19,152,15,"current"],[180,26,152,22],[180,29,152,25],[180,33,152,29],[181,8,153,4],[182,8,154,4,"setIsPlaying"],[182,20,154,16],[182,21,154,17],[182,26,154,22],[182,27,154,23],[183,6,155,2],[183,7,155,3],[184,6,155,3],[184,22,148,8,"stopAudio"],[184,31,148,17,"stopAudio"],[184,32,148,17],[185,8,148,17],[185,15,148,17,"_ref4"],[185,20,148,17],[185,21,148,17,"apply"],[185,26,148,17],[185,33,148,17,"arguments"],[185,42,148,17],[186,6,148,17],[187,4,148,17],[187,7,155,3],[188,4,157,2],[188,11,157,9],[189,6,158,4,"isPlaying"],[189,15,158,13],[190,6,159,4,"isLoading"],[190,15,159,13],[191,6,160,4,"playAudio"],[191,15,160,13],[192,6,161,4,"stopAudio"],[193,4,162,2],[193,5,162,3],[194,2,163,0],[194,3,163,1],[195,2,163,2,"_s"],[195,4,163,2],[195,5,9,13,"useAudioPlayer"],[195,19,9,27],[196,0,9,27],[196,3]],"functionMap":{"names":["<global>","useAudioPlayer","playAudio","reader.onloadend","reader.onerror","playFromUri","onPlaybackStatusUpdate","stopAudio"],"mappings":"AAA;8BCQ;oBCM;yBCmC;ODa;uBEE;OFG;GDO;sBIE;GJ2D;iCKE;GLQ;oBME;GNO;CDQ"},"hasCjsExports":false},"type":"js/module"}]}